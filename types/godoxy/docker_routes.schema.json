{"$schema":"http://json-schema.org/draft-07/schema#","definitions":{"CIDR":{"type":["string"]},"DockerRoutes":{"additionalProperties":{"anyOf":[{"additionalProperties":false,"properties":{"access_log":{"description":"Access log config","additionalProperties":false,"properties":{"fields":{"description":"Access log fields","additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"filters":{"description":"Access log filters","additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"format":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"agent":{"description":"Agent","type":"string"},"alias":{"description":"Alias (subdomain or FDN)","minLength":1,"type":"string"},"disable_compression":{"default":false,"description":"Disable compression","type":"boolean"},"healthcheck":{"description":"Healthcheck config","additionalProperties":false,"properties":{"disable":{"default":false,"description":"Disable healthcheck","type":"boolean"},"interval":{"default":"5s","description":"Healthcheck interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"path":{"default":"/","description":"Healthcheck path","format":"uri-reference","type":"string"},"timeout":{"default":"5s","description":"Healthcheck timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use_get":{"default":false,"description":"Use GET instead of HEAD","title":"Use GET","type":"boolean"}},"type":"object"},"homepage":{"description":"Homepage config","additionalProperties":false,"properties":{"category":{"description":"App category","type":"string"},"description":{"description":"App description","type":"string"},"icon":{"anyOf":[{"description":"URL","format":"uri","type":"string"},{"description":"Walkxcode / selfh.st icon","type":"string"},{"description":"Relative path to proxy target","type":["string"]}],"description":"Display icon"},"name":{"description":"Display name","type":"string"},"show":{"default":true,"description":"Show in dashboard","type":"boolean"},"url":{"description":"URL","format":"uri","type":"string"},"widget_config":{"additionalProperties":{},"description":"Widget config","type":"object"}},"type":"object"},"host":{"anyOf":[{"description":"Hostname","format":"hostname","type":"string"},{"description":"IPv4 address","format":"ipv4","type":"string"},{"description":"IPv6 address","format":"ipv6","type":"string"}],"default":"localhost","description":"Proxy host"},"idle_timeout":{"description":"Idle timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"load_balance":{"description":"Load balance config","anyOf":[{"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link"],"type":"object"},{"additionalProperties":false,"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"round_robin","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link","mode"],"type":"object"},{"additionalProperties":false,"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"least_conn","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link","mode"],"type":"object"},{"additionalProperties":false,"properties":{"config":{"description":"Real IP config","additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"},"use":{"description":"real_ip","const":"real_ip","type":"string"}},"required":["use","from"],"type":"object"},"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"ip_hash","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["config","link","mode"],"type":"object"}]},"middlewares":{"description":"Middlewares","additionalProperties":{"additionalProperties":false,"type":"object"},"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"cidr_whitelist":{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403}},"required":["allow"],"type":"object"},"cloudflare_real_ip":{"additionalProperties":false,"type":"object"},"custom_error_page":{"additionalProperties":false,"type":"object"},"error_page":{"additionalProperties":false,"type":"object"},"forward_auth":{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"}},"type":"object"},"hide_x_forwarded":{"additionalProperties":false,"type":"object"},"modify_html":{"additionalProperties":false,"properties":{"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"}},"required":["target","html"],"type":"object"},"modify_request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"modify_response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"oidc":{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"}},"type":"object"},"rate_limit":{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["average","burst"],"type":"object"},"real_ip":{"additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"}},"required":["from"],"type":"object"},"redirect_http":{"additionalProperties":false,"type":"object"},"request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"set_x_forwarded":{"additionalProperties":false,"type":"object"},"themed":{"additionalProperties":false,"properties":{"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"}},"type":"object"}},"required":["cidr_whitelist","cloudflare_real_ip","custom_error_page","error_page","forward_auth","hide_x_forwarded","modify_html","modify_request","modify_response","oidc","rate_limit","real_ip","redirect_http","request","response","set_x_forwarded","themed"],"type":"object"},"no_tls_verify":{"default":false,"description":"Skip TLS verification","type":"boolean"},"port":{"default":80,"description":"Proxy port","maximum":65535,"minimum":0,"type":["number","string"]},"response_header_timeout":{"default":"60s","description":"Response header timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"rules":{"description":"Route Rules","items":{"anyOf":[{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"description":"Rule name","type":"string"},"on":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]}},"required":["on","do"],"type":"object"},{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"const":"default","description":"Default rule","type":"string"}},"required":["name","do"],"type":"object"}]},"type":"array"},"scheme":{"default":"http","description":"Proxy scheme","enum":["http","https"],"type":"string"},"ssl_certificate":{"description":"Path to client certificate","type":"string"},"ssl_certificate_key":{"description":"Path to client key","type":"string"},"ssl_protocols":{"description":"Allowed TLS protocols","items":{"enum":["tlsv1.0","tlsv1.1","tlsv1.2","tlsv1.3"],"type":"string"},"type":"array"},"ssl_server_name":{"description":"SNI server name","type":"string"},"ssl_trusted_certificate":{"description":"Path to trusted CA certificates","type":"string"},"start_endpoint":{"description":"Start endpoint (any path can wake the container if not specified)","title":"Start Endpoint","format":"uri-reference","type":"string"},"stop_method":{"default":"stop","description":"Stop method","enum":["pause","stop","kill"],"type":"string"},"stop_signal":{"description":"Stop signal","enum":["","SIGINT","SIGTERM","SIGHUP","SIGQUIT","INT","TERM","HUP","QUIT"],"type":"string"},"stop_timeout":{"default":"30s","description":"Stop timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"wake_timeout":{"default":"30s","description":"Wake timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"type":"object"},{"additionalProperties":false,"properties":{"access_log":{"description":"Access log config","additionalProperties":false,"properties":{"fields":{"description":"Access log fields","additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"filters":{"description":"Access log filters","additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"format":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"agent":{"description":"Agent","type":"string"},"alias":{"description":"Alias (subdomain or FDN)","minLength":1,"type":"string"},"disable_compression":{"default":false,"description":"Disable compression","type":"boolean"},"healthcheck":{"description":"Healthcheck config","additionalProperties":false,"properties":{"disable":{"default":false,"description":"Disable healthcheck","type":"boolean"},"interval":{"default":"5s","description":"Healthcheck interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"path":{"default":"/","description":"Healthcheck path","format":"uri-reference","type":"string"},"timeout":{"default":"5s","description":"Healthcheck timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use_get":{"default":false,"description":"Use GET instead of HEAD","title":"Use GET","type":"boolean"}},"type":"object"},"homepage":{"description":"Homepage config","additionalProperties":false,"properties":{"category":{"description":"App category","type":"string"},"description":{"description":"App description","type":"string"},"icon":{"anyOf":[{"description":"URL","format":"uri","type":"string"},{"description":"Walkxcode / selfh.st icon","type":"string"},{"description":"Relative path to proxy target","type":["string"]}],"description":"Display icon"},"name":{"description":"Display name","type":"string"},"show":{"default":true,"description":"Show in dashboard","type":"boolean"},"url":{"description":"URL","format":"uri","type":"string"},"widget_config":{"additionalProperties":{},"description":"Widget config","type":"object"}},"type":"object"},"host":{"anyOf":[{"description":"Hostname","format":"hostname","type":"string"},{"description":"IPv4 address","format":"ipv4","type":"string"},{"description":"IPv6 address","format":"ipv6","type":"string"}],"default":"localhost","description":"Proxy host"},"idle_timeout":{"description":"Idle timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"load_balance":{"description":"Load balance config","anyOf":[{"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link"],"type":"object"},{"additionalProperties":false,"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"round_robin","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link","mode"],"type":"object"},{"additionalProperties":false,"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"least_conn","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link","mode"],"type":"object"},{"additionalProperties":false,"properties":{"config":{"description":"Real IP config","additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"},"use":{"description":"real_ip","const":"real_ip","type":"string"}},"required":["use","from"],"type":"object"},"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"ip_hash","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["config","link","mode"],"type":"object"}]},"middlewares":{"description":"Middlewares","additionalProperties":{"additionalProperties":false,"type":"object"},"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"cidr_whitelist":{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403}},"required":["allow"],"type":"object"},"cloudflare_real_ip":{"additionalProperties":false,"type":"object"},"custom_error_page":{"additionalProperties":false,"type":"object"},"error_page":{"additionalProperties":false,"type":"object"},"forward_auth":{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"}},"type":"object"},"hide_x_forwarded":{"additionalProperties":false,"type":"object"},"modify_html":{"additionalProperties":false,"properties":{"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"}},"required":["target","html"],"type":"object"},"modify_request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"modify_response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"oidc":{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"}},"type":"object"},"rate_limit":{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["average","burst"],"type":"object"},"real_ip":{"additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"}},"required":["from"],"type":"object"},"redirect_http":{"additionalProperties":false,"type":"object"},"request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"set_x_forwarded":{"additionalProperties":false,"type":"object"},"themed":{"additionalProperties":false,"properties":{"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"}},"type":"object"}},"required":["cidr_whitelist","cloudflare_real_ip","custom_error_page","error_page","forward_auth","hide_x_forwarded","modify_html","modify_request","modify_response","oidc","rate_limit","real_ip","redirect_http","request","response","set_x_forwarded","themed"],"type":"object"},"no_tls_verify":{"default":false,"description":"Skip TLS verification","type":"boolean"},"port":{"default":80,"description":"Proxy port","maximum":65535,"minimum":0,"type":["number","string"]},"response_header_timeout":{"default":"60s","description":"Response header timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"rule_file":{"anyOf":[{"description":"Local rule file","type":"string"},{"description":"Rule preset file","type":"string"}],"description":"Route Rule file"},"scheme":{"default":"http","description":"Proxy scheme","enum":["http","https"],"type":"string"},"ssl_certificate":{"description":"Path to client certificate","type":"string"},"ssl_certificate_key":{"description":"Path to client key","type":"string"},"ssl_protocols":{"description":"Allowed TLS protocols","items":{"enum":["tlsv1.0","tlsv1.1","tlsv1.2","tlsv1.3"],"type":"string"},"type":"array"},"ssl_server_name":{"description":"SNI server name","type":"string"},"ssl_trusted_certificate":{"description":"Path to trusted CA certificates","type":"string"},"start_endpoint":{"description":"Start endpoint (any path can wake the container if not specified)","title":"Start Endpoint","format":"uri-reference","type":"string"},"stop_method":{"default":"stop","description":"Stop method","enum":["pause","stop","kill"],"type":"string"},"stop_signal":{"description":"Stop signal","enum":["","SIGINT","SIGTERM","SIGHUP","SIGQUIT","INT","TERM","HUP","QUIT"],"type":"string"},"stop_timeout":{"default":"30s","description":"Stop timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"wake_timeout":{"default":"30s","description":"Wake timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"type":"object"},{"additionalProperties":false,"properties":{"access_log":{"description":"Access log config","additionalProperties":false,"properties":{"fields":{"description":"Access log fields","additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"filters":{"description":"Access log filters","additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"format":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"agent":{"description":"Route agent","type":"string"},"alias":{"description":"Alias (subdomain or FDN)","minLength":1,"type":"string"},"healthcheck":{"description":"Healthcheck config","additionalProperties":false,"properties":{"disable":{"default":false,"description":"Disable healthcheck","type":"boolean"},"interval":{"default":"5s","description":"Healthcheck interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"path":{"default":"/","description":"Healthcheck path","format":"uri-reference","type":"string"},"timeout":{"default":"5s","description":"Healthcheck timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use_get":{"default":false,"description":"Use GET instead of HEAD","title":"Use GET","type":"boolean"}},"type":"object"},"homepage":{"description":"Homepage config","additionalProperties":false,"properties":{"category":{"description":"App category","type":"string"},"description":{"description":"App description","type":"string"},"icon":{"anyOf":[{"description":"URL","format":"uri","type":"string"},{"description":"Walkxcode / selfh.st icon","type":"string"},{"description":"Relative path to proxy target","type":["string"]}],"description":"Display icon"},"name":{"description":"Display name","type":"string"},"show":{"default":true,"description":"Show in dashboard","type":"boolean"},"url":{"description":"URL","format":"uri","type":"string"},"widget_config":{"additionalProperties":{},"description":"Widget config","type":"object"}},"type":"object"},"idle_timeout":{"description":"Idle timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"middlewares":{"description":"Middlewares","additionalProperties":{"additionalProperties":false,"type":"object"},"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"cidr_whitelist":{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403}},"required":["allow"],"type":"object"},"cloudflare_real_ip":{"additionalProperties":false,"type":"object"},"custom_error_page":{"additionalProperties":false,"type":"object"},"error_page":{"additionalProperties":false,"type":"object"},"forward_auth":{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"}},"type":"object"},"hide_x_forwarded":{"additionalProperties":false,"type":"object"},"modify_html":{"additionalProperties":false,"properties":{"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"}},"required":["target","html"],"type":"object"},"modify_request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"modify_response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"oidc":{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"}},"type":"object"},"rate_limit":{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["average","burst"],"type":"object"},"real_ip":{"additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"}},"required":["from"],"type":"object"},"redirect_http":{"additionalProperties":false,"type":"object"},"request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"set_x_forwarded":{"additionalProperties":false,"type":"object"},"themed":{"additionalProperties":false,"properties":{"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"}},"type":"object"}},"required":["cidr_whitelist","cloudflare_real_ip","custom_error_page","error_page","forward_auth","hide_x_forwarded","modify_html","modify_request","modify_response","oidc","rate_limit","real_ip","redirect_http","request","response","set_x_forwarded","themed"],"type":"object"},"path_patterns":{"description":"Path patterns (only patterns that match will be proxied).\n\nSee https://pkg.go.dev/net/http#hdr-Patterns-ServeMux","items":{"description":"Path pattern","pattern":"^(?:([A-Z]+) )?(?:([a-zA-Z0-9.-]+)\\\\/)?(\\\\/[^\\\\s]*)$","type":"string"},"type":"array"},"root":{"type":"string"},"rules":{"description":"Route Rules","items":{"anyOf":[{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"description":"Rule name","type":"string"},"on":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]}},"required":["on","do"],"type":"object"},{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"const":"default","description":"Default rule","type":"string"}},"required":["name","do"],"type":"object"}]},"type":"array"},"scheme":{"const":"fileserver","type":"string"},"start_endpoint":{"description":"Start endpoint (any path can wake the container if not specified)","title":"Start Endpoint","format":"uri-reference","type":"string"},"stop_method":{"default":"stop","description":"Stop method","enum":["pause","stop","kill"],"type":"string"},"stop_signal":{"description":"Stop signal","enum":["","SIGINT","SIGTERM","SIGHUP","SIGQUIT","INT","TERM","HUP","QUIT"],"type":"string"},"stop_timeout":{"default":"30s","description":"Stop timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"wake_timeout":{"default":"30s","description":"Wake timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["root","scheme"],"type":"object"},{"additionalProperties":false,"properties":{"access_log":{"description":"Access log config","additionalProperties":false,"properties":{"fields":{"description":"Access log fields","additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"filters":{"description":"Access log filters","additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"format":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"agent":{"description":"Route agent","type":"string"},"alias":{"description":"Alias (subdomain or FDN)","minLength":1,"type":"string"},"healthcheck":{"description":"Healthcheck config","additionalProperties":false,"properties":{"disable":{"default":false,"description":"Disable healthcheck","type":"boolean"},"interval":{"default":"5s","description":"Healthcheck interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"path":{"default":"/","description":"Healthcheck path","format":"uri-reference","type":"string"},"timeout":{"default":"5s","description":"Healthcheck timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use_get":{"default":false,"description":"Use GET instead of HEAD","title":"Use GET","type":"boolean"}},"type":"object"},"homepage":{"description":"Homepage config","additionalProperties":false,"properties":{"category":{"description":"App category","type":"string"},"description":{"description":"App description","type":"string"},"icon":{"anyOf":[{"description":"URL","format":"uri","type":"string"},{"description":"Walkxcode / selfh.st icon","type":"string"},{"description":"Relative path to proxy target","type":["string"]}],"description":"Display icon"},"name":{"description":"Display name","type":"string"},"show":{"default":true,"description":"Show in dashboard","type":"boolean"},"url":{"description":"URL","format":"uri","type":"string"},"widget_config":{"additionalProperties":{},"description":"Widget config","type":"object"}},"type":"object"},"idle_timeout":{"description":"Idle timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"middlewares":{"description":"Middlewares","additionalProperties":{"additionalProperties":false,"type":"object"},"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"cidr_whitelist":{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403}},"required":["allow"],"type":"object"},"cloudflare_real_ip":{"additionalProperties":false,"type":"object"},"custom_error_page":{"additionalProperties":false,"type":"object"},"error_page":{"additionalProperties":false,"type":"object"},"forward_auth":{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"}},"type":"object"},"hide_x_forwarded":{"additionalProperties":false,"type":"object"},"modify_html":{"additionalProperties":false,"properties":{"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"}},"required":["target","html"],"type":"object"},"modify_request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"modify_response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"oidc":{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"}},"type":"object"},"rate_limit":{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["average","burst"],"type":"object"},"real_ip":{"additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"}},"required":["from"],"type":"object"},"redirect_http":{"additionalProperties":false,"type":"object"},"request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"set_x_forwarded":{"additionalProperties":false,"type":"object"},"themed":{"additionalProperties":false,"properties":{"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"}},"type":"object"}},"required":["cidr_whitelist","cloudflare_real_ip","custom_error_page","error_page","forward_auth","hide_x_forwarded","modify_html","modify_request","modify_response","oidc","rate_limit","real_ip","redirect_http","request","response","set_x_forwarded","themed"],"type":"object"},"path_patterns":{"description":"Path patterns (only patterns that match will be proxied).\n\nSee https://pkg.go.dev/net/http#hdr-Patterns-ServeMux","items":{"description":"Path pattern","pattern":"^(?:([A-Z]+) )?(?:([a-zA-Z0-9.-]+)\\\\/)?(\\\\/[^\\\\s]*)$","type":"string"},"type":"array"},"root":{"type":"string"},"rule_file":{"anyOf":[{"description":"Local rule file","type":"string"},{"description":"Rule preset file","type":"string"}],"description":"Route Rule file"},"scheme":{"const":"fileserver","type":"string"},"start_endpoint":{"description":"Start endpoint (any path can wake the container if not specified)","title":"Start Endpoint","format":"uri-reference","type":"string"},"stop_method":{"default":"stop","description":"Stop method","enum":["pause","stop","kill"],"type":"string"},"stop_signal":{"description":"Stop signal","enum":["","SIGINT","SIGTERM","SIGHUP","SIGQUIT","INT","TERM","HUP","QUIT"],"type":"string"},"stop_timeout":{"default":"30s","description":"Stop timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"wake_timeout":{"default":"30s","description":"Wake timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["root","scheme"],"type":"object"},{"additionalProperties":false,"properties":{"agent":{"description":"Agent","type":"string"},"alias":{"description":"Alias (subdomain or FDN)","minLength":1,"type":"string"},"healthcheck":{"description":"Healthcheck config","additionalProperties":false,"properties":{"disable":{"default":false,"description":"Disable healthcheck","type":"boolean"},"interval":{"default":"5s","description":"Healthcheck interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"path":{"default":"/","description":"Healthcheck path","format":"uri-reference","type":"string"},"timeout":{"default":"5s","description":"Healthcheck timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use_get":{"default":false,"description":"Use GET instead of HEAD","title":"Use GET","type":"boolean"}},"type":"object"},"host":{"anyOf":[{"description":"Hostname","format":"hostname","type":"string"},{"description":"IPv4 address","format":"ipv4","type":"string"},{"description":"IPv6 address","format":"ipv6","type":"string"}],"default":"localhost","description":"Stream host"},"idle_timeout":{"description":"Idle timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"port":{"anyOf":[{"anyOf":[{"description":"Port number","maximum":65535,"minimum":0,"type":["number","string"]},{"type":"string"}],"description":"Stream port","maximum":65535,"minimum":0,"pattern":"^\\d+:\\d+$"},{"type":"number"}]},"rules":{"description":"Route Rules","items":{"anyOf":[{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"description":"Rule name","type":"string"},"on":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]}},"required":["on","do"],"type":"object"},{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"const":"default","description":"Default rule","type":"string"}},"required":["name","do"],"type":"object"}]},"type":"array"},"scheme":{"default":"tcp","description":"Stream scheme","enum":["tcp","udp"],"type":"string"},"start_endpoint":{"description":"Start endpoint (any path can wake the container if not specified)","title":"Start Endpoint","format":"uri-reference","type":"string"},"stop_method":{"default":"stop","description":"Stop method","enum":["pause","stop","kill"],"type":"string"},"stop_signal":{"description":"Stop signal","enum":["","SIGINT","SIGTERM","SIGHUP","SIGQUIT","INT","TERM","HUP","QUIT"],"type":"string"},"stop_timeout":{"default":"30s","description":"Stop timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"wake_timeout":{"default":"30s","description":"Wake timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["port"],"type":"object"},{"additionalProperties":false,"properties":{"agent":{"description":"Agent","type":"string"},"alias":{"description":"Alias (subdomain or FDN)","minLength":1,"type":"string"},"healthcheck":{"description":"Healthcheck config","additionalProperties":false,"properties":{"disable":{"default":false,"description":"Disable healthcheck","type":"boolean"},"interval":{"default":"5s","description":"Healthcheck interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"path":{"default":"/","description":"Healthcheck path","format":"uri-reference","type":"string"},"timeout":{"default":"5s","description":"Healthcheck timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use_get":{"default":false,"description":"Use GET instead of HEAD","title":"Use GET","type":"boolean"}},"type":"object"},"host":{"anyOf":[{"description":"Hostname","format":"hostname","type":"string"},{"description":"IPv4 address","format":"ipv4","type":"string"},{"description":"IPv6 address","format":"ipv6","type":"string"}],"default":"localhost","description":"Stream host"},"idle_timeout":{"description":"Idle timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"port":{"anyOf":[{"anyOf":[{"description":"Port number","maximum":65535,"minimum":0,"type":["number","string"]},{"type":"string"}],"description":"Stream port","maximum":65535,"minimum":0,"pattern":"^\\d+:\\d+$"},{"type":"number"}]},"rule_file":{"anyOf":[{"description":"Local rule file","type":"string"},{"description":"Rule preset file","type":"string"}],"description":"Route Rule file"},"scheme":{"default":"tcp","description":"Stream scheme","enum":["tcp","udp"],"type":"string"},"start_endpoint":{"description":"Start endpoint (any path can wake the container if not specified)","title":"Start Endpoint","format":"uri-reference","type":"string"},"stop_method":{"default":"stop","description":"Stop method","enum":["pause","stop","kill"],"type":"string"},"stop_signal":{"description":"Stop signal","enum":["","SIGINT","SIGTERM","SIGHUP","SIGQUIT","INT","TERM","HUP","QUIT"],"type":"string"},"stop_timeout":{"default":"30s","description":"Stop timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"wake_timeout":{"default":"30s","description":"Wake timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["port"],"type":"object"}]},"type":"object"},"Duration":{"description":"Duration","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"HTTPHeader":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"HTTPMethod":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"HealthcheckConfig":{"additionalProperties":false,"properties":{"disable":{"default":false,"description":"Disable healthcheck","type":"boolean"},"interval":{"default":"5s","description":"Healthcheck interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"path":{"default":"/","description":"Healthcheck path","format":"uri-reference","type":"string"},"timeout":{"default":"5s","description":"Healthcheck timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use_get":{"default":false,"description":"Use GET instead of HEAD","title":"Use GET","type":"boolean"}},"type":"object"},"HomepageConfig":{"additionalProperties":false,"description":"Homepage config","properties":{"category":{"description":"App category","type":"string"},"description":{"description":"App description","type":"string"},"icon":{"anyOf":[{"description":"URL","format":"uri","type":"string"},{"description":"Walkxcode / selfh.st icon","type":"string"},{"description":"Relative path to proxy target","type":["string"]}],"description":"Display icon"},"name":{"description":"Display name","type":"string"},"show":{"default":true,"description":"Show in dashboard","type":"boolean"},"url":{"description":"URL","format":"uri","type":"string"},"widget_config":{"additionalProperties":{},"description":"Widget config","type":"object"}},"type":"object"},"Hostname":{"description":"Hostname","format":"hostname","type":"string"},"IPv4":{"description":"IPv4 address","format":"ipv4","type":"string"},"IPv6":{"description":"IPv6 address","format":"ipv6","type":"string"},"LoadBalanceConfig":{"anyOf":[{"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link"],"type":"object"},{"additionalProperties":false,"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"round_robin","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link","mode"],"type":"object"},{"additionalProperties":false,"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"least_conn","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link","mode"],"type":"object"},{"additionalProperties":false,"properties":{"config":{"description":"Real IP config","additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"},"use":{"description":"real_ip","const":"real_ip","type":"string"}},"required":["use","from"],"type":"object"},"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"ip_hash","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["config","link","mode"],"type":"object"}]},"LocalRuleFile":{"description":"Local rule file","type":"string"},"LogField":{"additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"LogFieldMode":{"enum":["keep","drop","redact"],"type":"string"},"LogKeepDays":{"type":"string"},"LogKeepLast":{"type":"string"},"LogKeepSize":{"type":"string"},"LooseUse<\"real_ip\">":{"const":"real_ip","type":"string"},"MiddlewaresMap":{"additionalProperties":{"additionalProperties":false,"type":"object"},"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"cidr_whitelist":{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403}},"required":["allow"],"type":"object"},"cloudflare_real_ip":{"additionalProperties":false,"type":"object"},"custom_error_page":{"additionalProperties":false,"type":"object"},"error_page":{"additionalProperties":false,"type":"object"},"forward_auth":{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"}},"type":"object"},"hide_x_forwarded":{"additionalProperties":false,"type":"object"},"modify_html":{"additionalProperties":false,"properties":{"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"}},"required":["target","html"],"type":"object"},"modify_request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"modify_response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"oidc":{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"}},"type":"object"},"rate_limit":{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["average","burst"],"type":"object"},"real_ip":{"additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"}},"required":["from"],"type":"object"},"redirect_http":{"additionalProperties":false,"type":"object"},"request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"set_x_forwarded":{"additionalProperties":false,"type":"object"},"themed":{"additionalProperties":false,"properties":{"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"}},"type":"object"}},"required":["cidr_whitelist","cloudflare_real_ip","custom_error_page","error_page","forward_auth","hide_x_forwarded","modify_html","modify_request","modify_response","oidc","rate_limit","real_ip","redirect_http","request","response","set_x_forwarded","themed"],"type":"object"},"Omit<CIDRWhitelist,\"use\">":{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403}},"required":["allow"],"type":"object"},"Omit<CloudflareRealIP,\"use\">":{"additionalProperties":false,"type":"object"},"Omit<CustomErrorPage,\"use\">":{"additionalProperties":false,"type":"object"},"Omit<ForwardAuth,\"use\">":{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"}},"type":"object"},"Omit<HideXForwarded,\"use\">":{"additionalProperties":false,"type":"object"},"Omit<ModifyHTML,\"use\">":{"additionalProperties":false,"properties":{"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"}},"required":["target","html"],"type":"object"},"Omit<ModifyRequest,\"use\">":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"Omit<ModifyResponse,\"use\">":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"Omit<OIDC,\"use\">":{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"}},"type":"object"},"Omit<RateLimit,\"use\">":{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["average","burst"],"type":"object"},"Omit<RealIP,\"use\">":{"additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"}},"required":["from"],"type":"object"},"Omit<RedirectHTTP,\"use\">":{"additionalProperties":false,"type":"object"},"Omit<SetXForwarded,\"use\">":{"additionalProperties":false,"type":"object"},"Omit<Themed,\"use\">":{"additionalProperties":false,"properties":{"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"}},"type":"object"},"Omit<UseMiddlewareFileRef,\"use\">":{"additionalProperties":false,"type":"object"},"OmitUse<CIDRWhitelist>":{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403}},"required":["allow"],"type":"object"},"OmitUse<CloudflareRealIP>":{"additionalProperties":false,"type":"object"},"OmitUse<CustomErrorPage>":{"additionalProperties":false,"type":"object"},"OmitUse<ForwardAuth>":{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"}},"type":"object"},"OmitUse<HideXForwarded>":{"additionalProperties":false,"type":"object"},"OmitUse<ModifyHTML>":{"additionalProperties":false,"properties":{"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"}},"required":["target","html"],"type":"object"},"OmitUse<ModifyRequest>":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"OmitUse<ModifyResponse>":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"OmitUse<OIDC>":{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"}},"type":"object"},"OmitUse<RateLimit>":{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["average","burst"],"type":"object"},"OmitUse<RealIP>":{"additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"}},"required":["from"],"type":"object"},"OmitUse<RedirectHTTP>":{"additionalProperties":false,"type":"object"},"OmitUse<SetXForwarded>":{"additionalProperties":false,"type":"object"},"OmitUse<Themed>":{"additionalProperties":false,"properties":{"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"}},"type":"object"},"OmitUse<UseMiddlewareFileRef>":{"additionalProperties":false,"type":"object"},"OptionalPattern<string>":{"type":["string"]},"PathPattern":{"description":"Path pattern","pattern":"^(?:([A-Z]+) )?(?:([a-zA-Z0-9.-]+)\\\\/)?(\\\\/[^\\\\s]*)$","type":"string"},"Pick<CIDRWhitelist,Exclude<(\"use\"|\"allow\"|\"status_code\"|\"status\"|\"message\"),\"use\">>":{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403}},"required":["allow"],"type":"object"},"Pick<CloudflareRealIP,Exclude<\"use\",\"use\">>":{"additionalProperties":false,"type":"object"},"Pick<CustomErrorPage,Exclude<\"use\",\"use\">>":{"additionalProperties":false,"type":"object"},"Pick<ForwardAuth,Exclude<(\"use\"|\"route\"|\"auth_endpoint\"|\"headers\"),\"use\">>":{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"}},"type":"object"},"Pick<HideXForwarded,Exclude<\"use\",\"use\">>":{"additionalProperties":false,"type":"object"},"Pick<ModifyHTML,Exclude<(\"use\"|\"target\"|\"html\"|\"replace\"),\"use\">>":{"additionalProperties":false,"properties":{"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"}},"required":["target","html"],"type":"object"},"Pick<ModifyRequest,Exclude<(\"use\"|\"set_headers\"|\"add_headers\"|\"hide_headers\"|\"add_prefix\"),\"use\">>":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"Pick<ModifyResponse,Exclude<(\"use\"|\"set_headers\"|\"add_headers\"|\"hide_headers\"),\"use\">>":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"Pick<OIDC,Exclude<(\"use\"|\"allowed_users\"|\"allowed_groups\"),\"use\">>":{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"}},"type":"object"},"Pick<RateLimit,Exclude<(\"use\"|\"average\"|\"burst\"|\"period\"),\"use\">>":{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["average","burst"],"type":"object"},"Pick<RealIP,Exclude<(\"use\"|\"header\"|\"from\"|\"recursive\"),\"use\">>":{"additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"}},"required":["from"],"type":"object"},"Pick<RedirectHTTP,Exclude<\"use\",\"use\">>":{"additionalProperties":false,"type":"object"},"Pick<SetXForwarded,Exclude<\"use\",\"use\">>":{"additionalProperties":false,"type":"object"},"Pick<Themed,Exclude<(\"use\"|\"theme\"|\"css\"|\"font_url\"|\"font_family\"),\"use\">>":{"additionalProperties":false,"properties":{"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"}},"type":"object"},"Pick<UseMiddlewareFileRef,Exclude<\"use\",\"use\">>":{"additionalProperties":false,"type":"object"},"Port":{"description":"Port number","maximum":65535,"minimum":0,"type":["number","string"]},"ProxyScheme":{"enum":["http","https"],"type":"string"},"RealIP":{"additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"},"use":{"description":"real_ip","const":"real_ip","type":"string"}},"required":["use","from"],"type":"object"},"Record<HTTPHeader,string>":{"additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"Record<string,LogFieldMode>":{"additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"RequestAccessLogFilter<CIDR>":{"additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"RequestAccessLogFilter<HTTPHeader>":{"additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"RequestAccessLogFilter<HTTPMethod>":{"additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"RequestAccessLogFilter<Hostname>":{"additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"RequestAccessLogFilter<StatusCodeRange>":{"additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"},"RequestLogConfig":{"additionalProperties":false,"properties":{"fields":{"description":"Access log fields","additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"filters":{"description":"Access log filters","additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"format":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"RequestLogFields":{"additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"RequestLogFilters":{"additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"RequestLogFormat":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"RetentionPolicy":{"anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}],"default":"30 days","description":"Retention policy"},"RouteRule":{"anyOf":[{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"description":"Rule name","type":"string"},"on":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]}},"required":["on","do"],"type":"object"},{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"const":"default","description":"Default rule","type":"string"}},"required":["name","do"],"type":"object"}]},"RuleDo":{"anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"description":"Rule do","examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"RuleDoAdd":{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},"RuleDoError":{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},"RuleDoLog":{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},"RuleDoNotify":{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},"RuleDoPass":{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"},"RuleDoProxy":{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},"RuleDoRedirect":{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},"RuleDoRemove":{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},"RuleDoRequireBasicAuth":{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},"RuleDoRewrite":{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},"RuleDoServe":{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},"RuleDoSet":{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},"RuleOn":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"RuleOnBasicAuth":{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},"RuleOnCookie":{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},"RuleOnForm":{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},"RuleOnHeader":{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},"RuleOnHost":{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},"RuleOnMethod":{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},"RuleOnPath":{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},"RuleOnPostForm":{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},"RuleOnQuery":{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},"RuleOnRemote":{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},"RuleOnResponseHeader":{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]},"RuleOnRoute":{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},"RuleOnStatusCode":{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},"RulePresetFile":{"description":"Rule preset file","type":"string"},"Signal":{"enum":["","SIGINT","SIGTERM","SIGHUP","SIGQUIT","INT","TERM","HUP","QUIT"],"type":"string"},"StatusCode":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},"StatusCodeRange":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"StopMethod":{"enum":["pause","stop","kill"],"type":"string"},"StreamPort":{"anyOf":[{"description":"Port number","maximum":65535,"minimum":0,"type":["number","string"]},{"type":"string"}],"description":"Stream port","maximum":65535,"minimum":0,"pattern":"^\\d+:\\d+$"},"StreamScheme":{"enum":["tcp","udp"],"type":"string"},"TLSProtocol":{"enum":["tlsv1.0","tlsv1.1","tlsv1.2","tlsv1.3"],"type":"string"},"TargetRelativeIconPath":{"description":"Relative path to proxy target","type":["string"]},"ThirdPartyIcons":{"description":"Walkxcode / selfh.st icon","type":"string"},"URI":{"description":"URI","format":"uri-reference","type":"string"},"URL":{"description":"URL","format":"uri","type":"string"}},"additionalProperties":{"anyOf":[{"additionalProperties":false,"properties":{"access_log":{"description":"Access log config","additionalProperties":false,"properties":{"fields":{"description":"Access log fields","additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"filters":{"description":"Access log filters","additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"format":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"agent":{"description":"Agent","type":"string"},"alias":{"description":"Alias (subdomain or FDN)","minLength":1,"type":"string"},"disable_compression":{"default":false,"description":"Disable compression","type":"boolean"},"healthcheck":{"description":"Healthcheck config","additionalProperties":false,"properties":{"disable":{"default":false,"description":"Disable healthcheck","type":"boolean"},"interval":{"default":"5s","description":"Healthcheck interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"path":{"default":"/","description":"Healthcheck path","format":"uri-reference","type":"string"},"timeout":{"default":"5s","description":"Healthcheck timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use_get":{"default":false,"description":"Use GET instead of HEAD","title":"Use GET","type":"boolean"}},"type":"object"},"homepage":{"description":"Homepage config","additionalProperties":false,"properties":{"category":{"description":"App category","type":"string"},"description":{"description":"App description","type":"string"},"icon":{"anyOf":[{"description":"URL","format":"uri","type":"string"},{"description":"Walkxcode / selfh.st icon","type":"string"},{"description":"Relative path to proxy target","type":["string"]}],"description":"Display icon"},"name":{"description":"Display name","type":"string"},"show":{"default":true,"description":"Show in dashboard","type":"boolean"},"url":{"description":"URL","format":"uri","type":"string"},"widget_config":{"additionalProperties":{},"description":"Widget config","type":"object"}},"type":"object"},"host":{"anyOf":[{"description":"Hostname","format":"hostname","type":"string"},{"description":"IPv4 address","format":"ipv4","type":"string"},{"description":"IPv6 address","format":"ipv6","type":"string"}],"default":"localhost","description":"Proxy host"},"idle_timeout":{"description":"Idle timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"load_balance":{"description":"Load balance config","anyOf":[{"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link"],"type":"object"},{"additionalProperties":false,"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"round_robin","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link","mode"],"type":"object"},{"additionalProperties":false,"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"least_conn","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link","mode"],"type":"object"},{"additionalProperties":false,"properties":{"config":{"description":"Real IP config","additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"},"use":{"description":"real_ip","const":"real_ip","type":"string"}},"required":["use","from"],"type":"object"},"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"ip_hash","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["config","link","mode"],"type":"object"}]},"middlewares":{"description":"Middlewares","additionalProperties":{"additionalProperties":false,"type":"object"},"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"cidr_whitelist":{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403}},"required":["allow"],"type":"object"},"cloudflare_real_ip":{"additionalProperties":false,"type":"object"},"custom_error_page":{"additionalProperties":false,"type":"object"},"error_page":{"additionalProperties":false,"type":"object"},"forward_auth":{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"}},"type":"object"},"hide_x_forwarded":{"additionalProperties":false,"type":"object"},"modify_html":{"additionalProperties":false,"properties":{"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"}},"required":["target","html"],"type":"object"},"modify_request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"modify_response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"oidc":{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"}},"type":"object"},"rate_limit":{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["average","burst"],"type":"object"},"real_ip":{"additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"}},"required":["from"],"type":"object"},"redirect_http":{"additionalProperties":false,"type":"object"},"request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"set_x_forwarded":{"additionalProperties":false,"type":"object"},"themed":{"additionalProperties":false,"properties":{"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"}},"type":"object"}},"required":["cidr_whitelist","cloudflare_real_ip","custom_error_page","error_page","forward_auth","hide_x_forwarded","modify_html","modify_request","modify_response","oidc","rate_limit","real_ip","redirect_http","request","response","set_x_forwarded","themed"],"type":"object"},"no_tls_verify":{"default":false,"description":"Skip TLS verification","type":"boolean"},"port":{"default":80,"description":"Proxy port","maximum":65535,"minimum":0,"type":["number","string"]},"response_header_timeout":{"default":"60s","description":"Response header timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"rules":{"description":"Route Rules","items":{"anyOf":[{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"description":"Rule name","type":"string"},"on":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]}},"required":["on","do"],"type":"object"},{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"const":"default","description":"Default rule","type":"string"}},"required":["name","do"],"type":"object"}]},"type":"array"},"scheme":{"default":"http","description":"Proxy scheme","enum":["http","https"],"type":"string"},"ssl_certificate":{"description":"Path to client certificate","type":"string"},"ssl_certificate_key":{"description":"Path to client key","type":"string"},"ssl_protocols":{"description":"Allowed TLS protocols","items":{"enum":["tlsv1.0","tlsv1.1","tlsv1.2","tlsv1.3"],"type":"string"},"type":"array"},"ssl_server_name":{"description":"SNI server name","type":"string"},"ssl_trusted_certificate":{"description":"Path to trusted CA certificates","type":"string"},"start_endpoint":{"description":"Start endpoint (any path can wake the container if not specified)","title":"Start Endpoint","format":"uri-reference","type":"string"},"stop_method":{"default":"stop","description":"Stop method","enum":["pause","stop","kill"],"type":"string"},"stop_signal":{"description":"Stop signal","enum":["","SIGINT","SIGTERM","SIGHUP","SIGQUIT","INT","TERM","HUP","QUIT"],"type":"string"},"stop_timeout":{"default":"30s","description":"Stop timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"wake_timeout":{"default":"30s","description":"Wake timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"type":"object"},{"additionalProperties":false,"properties":{"access_log":{"description":"Access log config","additionalProperties":false,"properties":{"fields":{"description":"Access log fields","additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"filters":{"description":"Access log filters","additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"format":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"agent":{"description":"Agent","type":"string"},"alias":{"description":"Alias (subdomain or FDN)","minLength":1,"type":"string"},"disable_compression":{"default":false,"description":"Disable compression","type":"boolean"},"healthcheck":{"description":"Healthcheck config","additionalProperties":false,"properties":{"disable":{"default":false,"description":"Disable healthcheck","type":"boolean"},"interval":{"default":"5s","description":"Healthcheck interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"path":{"default":"/","description":"Healthcheck path","format":"uri-reference","type":"string"},"timeout":{"default":"5s","description":"Healthcheck timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use_get":{"default":false,"description":"Use GET instead of HEAD","title":"Use GET","type":"boolean"}},"type":"object"},"homepage":{"description":"Homepage config","additionalProperties":false,"properties":{"category":{"description":"App category","type":"string"},"description":{"description":"App description","type":"string"},"icon":{"anyOf":[{"description":"URL","format":"uri","type":"string"},{"description":"Walkxcode / selfh.st icon","type":"string"},{"description":"Relative path to proxy target","type":["string"]}],"description":"Display icon"},"name":{"description":"Display name","type":"string"},"show":{"default":true,"description":"Show in dashboard","type":"boolean"},"url":{"description":"URL","format":"uri","type":"string"},"widget_config":{"additionalProperties":{},"description":"Widget config","type":"object"}},"type":"object"},"host":{"anyOf":[{"description":"Hostname","format":"hostname","type":"string"},{"description":"IPv4 address","format":"ipv4","type":"string"},{"description":"IPv6 address","format":"ipv6","type":"string"}],"default":"localhost","description":"Proxy host"},"idle_timeout":{"description":"Idle timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"load_balance":{"description":"Load balance config","anyOf":[{"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link"],"type":"object"},{"additionalProperties":false,"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"round_robin","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link","mode"],"type":"object"},{"additionalProperties":false,"properties":{"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"least_conn","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["link","mode"],"type":"object"},{"additionalProperties":false,"properties":{"config":{"description":"Real IP config","additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"},"use":{"description":"real_ip","const":"real_ip","type":"string"}},"required":["use","from"],"type":"object"},"link":{"description":"Load-balancer alias","minLength":1,"type":"string"},"mode":{"const":"ip_hash","type":"string"},"weight":{"description":"Load-balance weight","maximum":100,"minimum":0,"type":"number"}},"required":["config","link","mode"],"type":"object"}]},"middlewares":{"description":"Middlewares","additionalProperties":{"additionalProperties":false,"type":"object"},"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"cidr_whitelist":{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403}},"required":["allow"],"type":"object"},"cloudflare_real_ip":{"additionalProperties":false,"type":"object"},"custom_error_page":{"additionalProperties":false,"type":"object"},"error_page":{"additionalProperties":false,"type":"object"},"forward_auth":{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"}},"type":"object"},"hide_x_forwarded":{"additionalProperties":false,"type":"object"},"modify_html":{"additionalProperties":false,"properties":{"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"}},"required":["target","html"],"type":"object"},"modify_request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"modify_response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"oidc":{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"}},"type":"object"},"rate_limit":{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["average","burst"],"type":"object"},"real_ip":{"additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"}},"required":["from"],"type":"object"},"redirect_http":{"additionalProperties":false,"type":"object"},"request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"set_x_forwarded":{"additionalProperties":false,"type":"object"},"themed":{"additionalProperties":false,"properties":{"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"}},"type":"object"}},"required":["cidr_whitelist","cloudflare_real_ip","custom_error_page","error_page","forward_auth","hide_x_forwarded","modify_html","modify_request","modify_response","oidc","rate_limit","real_ip","redirect_http","request","response","set_x_forwarded","themed"],"type":"object"},"no_tls_verify":{"default":false,"description":"Skip TLS verification","type":"boolean"},"port":{"default":80,"description":"Proxy port","maximum":65535,"minimum":0,"type":["number","string"]},"response_header_timeout":{"default":"60s","description":"Response header timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"rule_file":{"anyOf":[{"description":"Local rule file","type":"string"},{"description":"Rule preset file","type":"string"}],"description":"Route Rule file"},"scheme":{"default":"http","description":"Proxy scheme","enum":["http","https"],"type":"string"},"ssl_certificate":{"description":"Path to client certificate","type":"string"},"ssl_certificate_key":{"description":"Path to client key","type":"string"},"ssl_protocols":{"description":"Allowed TLS protocols","items":{"enum":["tlsv1.0","tlsv1.1","tlsv1.2","tlsv1.3"],"type":"string"},"type":"array"},"ssl_server_name":{"description":"SNI server name","type":"string"},"ssl_trusted_certificate":{"description":"Path to trusted CA certificates","type":"string"},"start_endpoint":{"description":"Start endpoint (any path can wake the container if not specified)","title":"Start Endpoint","format":"uri-reference","type":"string"},"stop_method":{"default":"stop","description":"Stop method","enum":["pause","stop","kill"],"type":"string"},"stop_signal":{"description":"Stop signal","enum":["","SIGINT","SIGTERM","SIGHUP","SIGQUIT","INT","TERM","HUP","QUIT"],"type":"string"},"stop_timeout":{"default":"30s","description":"Stop timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"wake_timeout":{"default":"30s","description":"Wake timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"type":"object"},{"additionalProperties":false,"properties":{"access_log":{"description":"Access log config","additionalProperties":false,"properties":{"fields":{"description":"Access log fields","additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"filters":{"description":"Access log filters","additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"format":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"agent":{"description":"Route agent","type":"string"},"alias":{"description":"Alias (subdomain or FDN)","minLength":1,"type":"string"},"healthcheck":{"description":"Healthcheck config","additionalProperties":false,"properties":{"disable":{"default":false,"description":"Disable healthcheck","type":"boolean"},"interval":{"default":"5s","description":"Healthcheck interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"path":{"default":"/","description":"Healthcheck path","format":"uri-reference","type":"string"},"timeout":{"default":"5s","description":"Healthcheck timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use_get":{"default":false,"description":"Use GET instead of HEAD","title":"Use GET","type":"boolean"}},"type":"object"},"homepage":{"description":"Homepage config","additionalProperties":false,"properties":{"category":{"description":"App category","type":"string"},"description":{"description":"App description","type":"string"},"icon":{"anyOf":[{"description":"URL","format":"uri","type":"string"},{"description":"Walkxcode / selfh.st icon","type":"string"},{"description":"Relative path to proxy target","type":["string"]}],"description":"Display icon"},"name":{"description":"Display name","type":"string"},"show":{"default":true,"description":"Show in dashboard","type":"boolean"},"url":{"description":"URL","format":"uri","type":"string"},"widget_config":{"additionalProperties":{},"description":"Widget config","type":"object"}},"type":"object"},"idle_timeout":{"description":"Idle timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"middlewares":{"description":"Middlewares","additionalProperties":{"additionalProperties":false,"type":"object"},"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"cidr_whitelist":{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403}},"required":["allow"],"type":"object"},"cloudflare_real_ip":{"additionalProperties":false,"type":"object"},"custom_error_page":{"additionalProperties":false,"type":"object"},"error_page":{"additionalProperties":false,"type":"object"},"forward_auth":{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"}},"type":"object"},"hide_x_forwarded":{"additionalProperties":false,"type":"object"},"modify_html":{"additionalProperties":false,"properties":{"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"}},"required":["target","html"],"type":"object"},"modify_request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"modify_response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"oidc":{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"}},"type":"object"},"rate_limit":{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["average","burst"],"type":"object"},"real_ip":{"additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"}},"required":["from"],"type":"object"},"redirect_http":{"additionalProperties":false,"type":"object"},"request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"set_x_forwarded":{"additionalProperties":false,"type":"object"},"themed":{"additionalProperties":false,"properties":{"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"}},"type":"object"}},"required":["cidr_whitelist","cloudflare_real_ip","custom_error_page","error_page","forward_auth","hide_x_forwarded","modify_html","modify_request","modify_response","oidc","rate_limit","real_ip","redirect_http","request","response","set_x_forwarded","themed"],"type":"object"},"path_patterns":{"description":"Path patterns (only patterns that match will be proxied).\n\nSee https://pkg.go.dev/net/http#hdr-Patterns-ServeMux","items":{"description":"Path pattern","pattern":"^(?:([A-Z]+) )?(?:([a-zA-Z0-9.-]+)\\\\/)?(\\\\/[^\\\\s]*)$","type":"string"},"type":"array"},"root":{"type":"string"},"rules":{"description":"Route Rules","items":{"anyOf":[{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"description":"Rule name","type":"string"},"on":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]}},"required":["on","do"],"type":"object"},{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"const":"default","description":"Default rule","type":"string"}},"required":["name","do"],"type":"object"}]},"type":"array"},"scheme":{"const":"fileserver","type":"string"},"start_endpoint":{"description":"Start endpoint (any path can wake the container if not specified)","title":"Start Endpoint","format":"uri-reference","type":"string"},"stop_method":{"default":"stop","description":"Stop method","enum":["pause","stop","kill"],"type":"string"},"stop_signal":{"description":"Stop signal","enum":["","SIGINT","SIGTERM","SIGHUP","SIGQUIT","INT","TERM","HUP","QUIT"],"type":"string"},"stop_timeout":{"default":"30s","description":"Stop timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"wake_timeout":{"default":"30s","description":"Wake timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["root","scheme"],"type":"object"},{"additionalProperties":false,"properties":{"access_log":{"description":"Access log config","additionalProperties":false,"properties":{"fields":{"description":"Access log fields","additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"filters":{"description":"Access log filters","additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"format":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"agent":{"description":"Route agent","type":"string"},"alias":{"description":"Alias (subdomain or FDN)","minLength":1,"type":"string"},"healthcheck":{"description":"Healthcheck config","additionalProperties":false,"properties":{"disable":{"default":false,"description":"Disable healthcheck","type":"boolean"},"interval":{"default":"5s","description":"Healthcheck interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"path":{"default":"/","description":"Healthcheck path","format":"uri-reference","type":"string"},"timeout":{"default":"5s","description":"Healthcheck timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use_get":{"default":false,"description":"Use GET instead of HEAD","title":"Use GET","type":"boolean"}},"type":"object"},"homepage":{"description":"Homepage config","additionalProperties":false,"properties":{"category":{"description":"App category","type":"string"},"description":{"description":"App description","type":"string"},"icon":{"anyOf":[{"description":"URL","format":"uri","type":"string"},{"description":"Walkxcode / selfh.st icon","type":"string"},{"description":"Relative path to proxy target","type":["string"]}],"description":"Display icon"},"name":{"description":"Display name","type":"string"},"show":{"default":true,"description":"Show in dashboard","type":"boolean"},"url":{"description":"URL","format":"uri","type":"string"},"widget_config":{"additionalProperties":{},"description":"Widget config","type":"object"}},"type":"object"},"idle_timeout":{"description":"Idle timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"middlewares":{"description":"Middlewares","additionalProperties":{"additionalProperties":false,"type":"object"},"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"cidr_whitelist":{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403}},"required":["allow"],"type":"object"},"cloudflare_real_ip":{"additionalProperties":false,"type":"object"},"custom_error_page":{"additionalProperties":false,"type":"object"},"error_page":{"additionalProperties":false,"type":"object"},"forward_auth":{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"}},"type":"object"},"hide_x_forwarded":{"additionalProperties":false,"type":"object"},"modify_html":{"additionalProperties":false,"properties":{"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"}},"required":["target","html"],"type":"object"},"modify_request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"modify_response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"oidc":{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"}},"type":"object"},"rate_limit":{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["average","burst"],"type":"object"},"real_ip":{"additionalProperties":false,"properties":{"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"}},"required":["from"],"type":"object"},"redirect_http":{"additionalProperties":false,"type":"object"},"request":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"response":{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"}},"type":"object"},"set_x_forwarded":{"additionalProperties":false,"type":"object"},"themed":{"additionalProperties":false,"properties":{"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"}},"type":"object"}},"required":["cidr_whitelist","cloudflare_real_ip","custom_error_page","error_page","forward_auth","hide_x_forwarded","modify_html","modify_request","modify_response","oidc","rate_limit","real_ip","redirect_http","request","response","set_x_forwarded","themed"],"type":"object"},"path_patterns":{"description":"Path patterns (only patterns that match will be proxied).\n\nSee https://pkg.go.dev/net/http#hdr-Patterns-ServeMux","items":{"description":"Path pattern","pattern":"^(?:([A-Z]+) )?(?:([a-zA-Z0-9.-]+)\\\\/)?(\\\\/[^\\\\s]*)$","type":"string"},"type":"array"},"root":{"type":"string"},"rule_file":{"anyOf":[{"description":"Local rule file","type":"string"},{"description":"Rule preset file","type":"string"}],"description":"Route Rule file"},"scheme":{"const":"fileserver","type":"string"},"start_endpoint":{"description":"Start endpoint (any path can wake the container if not specified)","title":"Start Endpoint","format":"uri-reference","type":"string"},"stop_method":{"default":"stop","description":"Stop method","enum":["pause","stop","kill"],"type":"string"},"stop_signal":{"description":"Stop signal","enum":["","SIGINT","SIGTERM","SIGHUP","SIGQUIT","INT","TERM","HUP","QUIT"],"type":"string"},"stop_timeout":{"default":"30s","description":"Stop timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"wake_timeout":{"default":"30s","description":"Wake timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["root","scheme"],"type":"object"},{"additionalProperties":false,"properties":{"agent":{"description":"Agent","type":"string"},"alias":{"description":"Alias (subdomain or FDN)","minLength":1,"type":"string"},"healthcheck":{"description":"Healthcheck config","additionalProperties":false,"properties":{"disable":{"default":false,"description":"Disable healthcheck","type":"boolean"},"interval":{"default":"5s","description":"Healthcheck interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"path":{"default":"/","description":"Healthcheck path","format":"uri-reference","type":"string"},"timeout":{"default":"5s","description":"Healthcheck timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use_get":{"default":false,"description":"Use GET instead of HEAD","title":"Use GET","type":"boolean"}},"type":"object"},"host":{"anyOf":[{"description":"Hostname","format":"hostname","type":"string"},{"description":"IPv4 address","format":"ipv4","type":"string"},{"description":"IPv6 address","format":"ipv6","type":"string"}],"default":"localhost","description":"Stream host"},"idle_timeout":{"description":"Idle timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"port":{"anyOf":[{"anyOf":[{"description":"Port number","maximum":65535,"minimum":0,"type":["number","string"]},{"type":"string"}],"description":"Stream port","maximum":65535,"minimum":0,"pattern":"^\\d+:\\d+$"},{"type":"number"}]},"rules":{"description":"Route Rules","items":{"anyOf":[{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"description":"Rule name","type":"string"},"on":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]}},"required":["on","do"],"type":"object"},{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080","proxy /api/v1/"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":"string"},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"const":"default","description":"Default rule","type":"string"}},"required":["name","do"],"type":"object"}]},"type":"array"},"scheme":{"default":"tcp","description":"Stream scheme","enum":["tcp","udp"],"type":"string"},"start_endpoint":{"description":"Start endpoint (any path can wake the container if not specified)","title":"Start Endpoint","format":"uri-reference","type":"string"},"stop_method":{"default":"stop","description":"Stop method","enum":["pause","stop","kill"],"type":"string"},"stop_signal":{"description":"Stop signal","enum":["","SIGINT","SIGTERM","SIGHUP","SIGQUIT","INT","TERM","HUP","QUIT"],"type":"string"},"stop_timeout":{"default":"30s","description":"Stop timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"wake_timeout":{"default":"30s","description":"Wake timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["port"],"type":"object"},{"additionalProperties":false,"properties":{"agent":{"description":"Agent","type":"string"},"alias":{"description":"Alias (subdomain or FDN)","minLength":1,"type":"string"},"healthcheck":{"description":"Healthcheck config","additionalProperties":false,"properties":{"disable":{"default":false,"description":"Disable healthcheck","type":"boolean"},"interval":{"default":"5s","description":"Healthcheck interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"path":{"default":"/","description":"Healthcheck path","format":"uri-reference","type":"string"},"timeout":{"default":"5s","description":"Healthcheck timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use_get":{"default":false,"description":"Use GET instead of HEAD","title":"Use GET","type":"boolean"}},"type":"object"},"host":{"anyOf":[{"description":"Hostname","format":"hostname","type":"string"},{"description":"IPv4 address","format":"ipv4","type":"string"},{"description":"IPv6 address","format":"ipv6","type":"string"}],"default":"localhost","description":"Stream host"},"idle_timeout":{"description":"Idle timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"port":{"anyOf":[{"anyOf":[{"description":"Port number","maximum":65535,"minimum":0,"type":["number","string"]},{"type":"string"}],"description":"Stream port","maximum":65535,"minimum":0,"pattern":"^\\d+:\\d+$"},{"type":"number"}]},"rule_file":{"anyOf":[{"description":"Local rule file","type":"string"},{"description":"Rule preset file","type":"string"}],"description":"Route Rule file"},"scheme":{"default":"tcp","description":"Stream scheme","enum":["tcp","udp"],"type":"string"},"start_endpoint":{"description":"Start endpoint (any path can wake the container if not specified)","title":"Start Endpoint","format":"uri-reference","type":"string"},"stop_method":{"default":"stop","description":"Stop method","enum":["pause","stop","kill"],"type":"string"},"stop_signal":{"description":"Stop signal","enum":["","SIGINT","SIGTERM","SIGHUP","SIGQUIT","INT","TERM","HUP","QUIT"],"type":"string"},"stop_timeout":{"default":"30s","description":"Stop timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"wake_timeout":{"default":"30s","description":"Wake timeout","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"}},"required":["port"],"type":"object"}]},"type":"object"}
