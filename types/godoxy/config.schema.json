{"$schema":"http://json-schema.org/draft-07/schema#","definitions":{"ACLConfig":{"additionalProperties":false,"description":"ACL config","properties":{"allow":{"description":"Allow list","items":{"anyOf":[{"description":"IP matcher","examples":["ip:192.168.1.1"],"type":"string"},{"description":"CIDR matcher","examples":["cidr:192.168.1.0/24"],"type":"string"},{"description":"Country ISO matcher","examples":["country:US"],"pattern":"country:\\w{2}","type":"string"},{"description":"Timezone matcher","examples":["tz:America/New_York"],"pattern":"tz:\\w+\\/\\w+","type":"string"}]},"type":"array"},"allow_local":{"default":true,"description":"Allow local addresses","type":"boolean"},"default":{"default":"allow","description":"Default action","enum":["allow","deny"],"type":"string"},"deny":{"description":"Deny list","items":{"anyOf":[{"description":"IP matcher","examples":["ip:192.168.1.1"],"type":"string"},{"description":"CIDR matcher","examples":["cidr:192.168.1.0/24"],"type":"string"},{"description":"Country ISO matcher","examples":["country:US"],"pattern":"country:\\w{2}","type":"string"},{"description":"Timezone matcher","examples":["tz:America/New_York"],"pattern":"tz:\\w+\\/\\w+","type":"string"}]},"type":"array"},"log":{"description":"ACL logger","additionalProperties":false,"properties":{"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"log_allowed":{"default":false,"description":"Log allowed IPs?","type":"boolean"},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"notify":{"additionalProperties":false,"description":"ACL Summary notifer","properties":{"include_allowed":{"default":false,"description":"Include allowed IPs?","type":"boolean"},"interval":{"default":"1m","description":"Notification interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"to":{"description":"Notification provider names","items":{"type":"string"},"type":"array"}},"type":"object"}},"type":"object"},"ACLLogConfig":{"additionalProperties":false,"properties":{"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"log_allowed":{"default":false,"description":"Log allowed IPs?","type":"boolean"},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"ACLMatcher":{"anyOf":[{"description":"IP matcher","examples":["ip:192.168.1.1"],"type":"string"},{"description":"CIDR matcher","examples":["cidr:192.168.1.0/24"],"type":"string"},{"description":"Country ISO matcher","examples":["country:US"],"pattern":"country:\\w{2}","type":"string"},{"description":"Timezone matcher","examples":["tz:America/New_York"],"pattern":"tz:\\w+\\/\\w+","type":"string"}]},"AutocertConfig":{"anyOf":[{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"anyOf":[{"type":"object"},{"type":"null"}]},"provider":{"const":"local","type":"string"}},"required":["provider"],"type":"object"},{"additionalProperties":false,"properties":{"ca_certs":{"description":"CA Certs","items":{"type":"string"},"type":"array"},"ca_dir_url":{"description":"CA Directory URL","type":"string"},"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"eab_hmac":{"description":"EAB HMAC base64","type":"string"},"eab_kid":{"description":"EAB Key ID","type":"string"},"email":{"description":"ACME email","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"provider":{"const":"custom","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"ACME email","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"auth_token":{"type":"string"}},"required":["auth_token"],"type":"object"},"provider":{"const":"cloudflare","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"ACME email","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"client_id":{"type":"string"},"email":{"description":"Email address","format":"email","type":"string"},"password":{"type":"string"}},"required":["client_id","email","password"],"type":"object"},"provider":{"const":"clouddns","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"token":{"type":"string"}},"required":["token"],"type":"object"},"provider":{"const":"duckdns","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"api_endpoint":{"enum":["ovh-eu","ovh-ca","ovh-us","kimsufi-eu","kimsufi-ca","soyoustart-eu","soyoustart-ca"],"type":"string"},"application_key":{"type":"string"},"application_secret":{"type":"string"},"consumer_key":{"type":"string"}},"required":["application_secret","consumer_key","application_key"],"type":"object"},"provider":{"const":"ovh","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"api_endpoint":{"enum":["ovh-eu","ovh-ca","ovh-us","kimsufi-eu","kimsufi-ca","soyoustart-eu","soyoustart-ca"],"type":"string"},"application_secret":{"type":"string"},"consumer_key":{"type":"string"},"oauth2_config":{"additionalProperties":false,"properties":{"client_id":{"type":"string"},"client_secret":{"type":"string"}},"required":["client_id","client_secret"],"type":"object"}},"required":["application_secret","consumer_key","oauth2_config"],"type":"object"},"provider":{"const":"ovh","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"api_key":{"type":"string"},"secret_api_key":{"type":"string"}},"required":["api_key","secret_api_key"],"type":"object"},"provider":{"const":"porkbun","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"type":"object"},"provider":{"type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"}]},"CIDR":{"type":["string"]},"CIDRMatcher":{"description":"CIDR matcher","examples":["cidr:192.168.1.0/24"],"type":"string"},"CloudDNSOptions":{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"ACME email","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"client_id":{"type":"string"},"email":{"description":"Email address","format":"email","type":"string"},"password":{"type":"string"}},"required":["client_id","email","password"],"type":"object"},"provider":{"const":"clouddns","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},"CloudflareOptions":{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"ACME email","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"auth_token":{"type":"string"}},"required":["auth_token"],"type":"object"},"provider":{"const":"cloudflare","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},"Config":{"additionalProperties":false,"properties":{"acl":{"description":"Optional access control configuration","additionalProperties":false,"properties":{"allow":{"description":"Allow list","items":{"anyOf":[{"description":"IP matcher","examples":["ip:192.168.1.1"],"type":"string"},{"description":"CIDR matcher","examples":["cidr:192.168.1.0/24"],"type":"string"},{"description":"Country ISO matcher","examples":["country:US"],"pattern":"country:\\w{2}","type":"string"},{"description":"Timezone matcher","examples":["tz:America/New_York"],"pattern":"tz:\\w+\\/\\w+","type":"string"}]},"type":"array"},"allow_local":{"default":true,"description":"Allow local addresses","type":"boolean"},"default":{"default":"allow","description":"Default action","enum":["allow","deny"],"type":"string"},"deny":{"description":"Deny list","items":{"anyOf":[{"description":"IP matcher","examples":["ip:192.168.1.1"],"type":"string"},{"description":"CIDR matcher","examples":["cidr:192.168.1.0/24"],"type":"string"},{"description":"Country ISO matcher","examples":["country:US"],"pattern":"country:\\w{2}","type":"string"},{"description":"Timezone matcher","examples":["tz:America/New_York"],"pattern":"tz:\\w+\\/\\w+","type":"string"}]},"type":"array"},"log":{"description":"ACL logger","additionalProperties":false,"properties":{"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"log_allowed":{"default":false,"description":"Log allowed IPs?","type":"boolean"},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"notify":{"additionalProperties":false,"description":"ACL Summary notifer","properties":{"include_allowed":{"default":false,"description":"Include allowed IPs?","type":"boolean"},"interval":{"default":"1m","description":"Notification interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"to":{"description":"Notification provider names","items":{"type":"string"},"type":"array"}},"type":"object"}},"type":"object"},"autocert":{"description":"Optional autocert configuration","anyOf":[{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"anyOf":[{"type":"object"},{"type":"null"}]},"provider":{"const":"local","type":"string"}},"required":["provider"],"type":"object"},{"additionalProperties":false,"properties":{"ca_certs":{"description":"CA Certs","items":{"type":"string"},"type":"array"},"ca_dir_url":{"description":"CA Directory URL","type":"string"},"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"eab_hmac":{"description":"EAB HMAC base64","type":"string"},"eab_kid":{"description":"EAB Key ID","type":"string"},"email":{"description":"ACME email","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"provider":{"const":"custom","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"ACME email","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"auth_token":{"type":"string"}},"required":["auth_token"],"type":"object"},"provider":{"const":"cloudflare","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"ACME email","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"client_id":{"type":"string"},"email":{"description":"Email address","format":"email","type":"string"},"password":{"type":"string"}},"required":["client_id","email","password"],"type":"object"},"provider":{"const":"clouddns","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"token":{"type":"string"}},"required":["token"],"type":"object"},"provider":{"const":"duckdns","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"api_endpoint":{"enum":["ovh-eu","ovh-ca","ovh-us","kimsufi-eu","kimsufi-ca","soyoustart-eu","soyoustart-ca"],"type":"string"},"application_key":{"type":"string"},"application_secret":{"type":"string"},"consumer_key":{"type":"string"}},"required":["application_secret","consumer_key","application_key"],"type":"object"},"provider":{"const":"ovh","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"api_endpoint":{"enum":["ovh-eu","ovh-ca","ovh-us","kimsufi-eu","kimsufi-ca","soyoustart-eu","soyoustart-ca"],"type":"string"},"application_secret":{"type":"string"},"consumer_key":{"type":"string"},"oauth2_config":{"additionalProperties":false,"properties":{"client_id":{"type":"string"},"client_secret":{"type":"string"}},"required":["client_id","client_secret"],"type":"object"}},"required":["application_secret","consumer_key","oauth2_config"],"type":"object"},"provider":{"const":"ovh","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"api_key":{"type":"string"},"secret_api_key":{"type":"string"}},"required":["api_key","secret_api_key"],"type":"object"},"provider":{"const":"porkbun","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"type":"object"},"provider":{"type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"}]},"entrypoint":{"description":"Optional entrypoint configuration","additionalProperties":false,"properties":{"access_log":{"description":"Entrypoint access log configuration","additionalProperties":false,"properties":{"fields":{"description":"Access log fields","additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"filters":{"description":"Access log filters","additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"format":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"middlewares":{"description":"Entrypoint middleware configuration","items":{"anyOf":[{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"error_page","enum":["error_page","custom_error_page"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"redirect_http","const":"redirect_http","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"set_x_forwarded","const":"set_x_forwarded","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"hide_x_forwarded","const":"hide_x_forwarded","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"use":{"description":"cidr_whitelist","const":"cidr_whitelist","type":"string"}},"required":["allow","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"cloudflare_real_ip","const":"cloudflare_real_ip","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"use":{"description":"modify_request","enum":["modify_request","request"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"use":{"description":"modify_response","enum":["modify_response","response"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"oidc","const":"oidc","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use":{"description":"rate_limit","const":"rate_limit","type":"string"}},"required":["average","burst","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"},"use":{"description":"real_ip","const":"real_ip","type":"string"}},"required":["from","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"},"use":{"description":"modify_html","const":"modify_html","type":"string"}},"required":["html","target","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"},"use":{"description":"themed","const":"themed","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"},"use":{"description":"forward_auth","const":"forward_auth","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"type":"string"}},"required":["use"],"type":"object"}]},"type":"array"},"rules":{"additionalProperties":false,"description":"Entrypoint rules","properties":{"not_found":{"description":"Not found rules","items":{"anyOf":[{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":["string"]},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"description":"Rule name","type":"string"},"on":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]}},"required":["on","do"],"type":"object"},{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":["string"]},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"const":"default","description":"Default rule","type":"string"}},"required":["name","do"],"type":"object"}]},"type":"array"}},"type":"object"},"support_proxy_protocol":{"description":"Enable support for proxy protocol","type":"boolean"}},"type":"object"},"homepage":{"description":"Homepage configuration","additionalProperties":false,"properties":{"use_default_categories":{"default":true,"description":"Use default app categories (uses docker image name)","type":"boolean"}},"required":["use_default_categories"],"type":"object"},"match_domains":{"default":[],"description":"List of domains to match","items":{"description":"Domain name","pattern":"^(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"minItems":1,"type":"array"},"providers":{"description":"Providers configuration (include file, docker, notification)","additionalProperties":false,"properties":{"agents":{"description":"List of GoDoxy agents","items":{"type":"string"},"minItems":1,"type":"array"},"docker":{"additionalProperties":{"anyOf":[{"description":"URL","format":"uri","type":"string"},{"const":"$DOCKER_HOST","type":"string"}]},"description":"Name-value mapping of docker hosts to retrieve routes from","minProperties":1,"type":"object"},"include":{"description":"List of route definition files to include","items":{"description":"URI","format":"uri-reference","type":"string"},"minItems":1,"type":"array"},"maxmind":{"description":"Maxmind provider","additionalProperties":false,"properties":{"account_id":{"description":"Account ID","type":["string","number"]},"database":{"default":"geolite","description":"Database","enum":["geolite","geoip2"],"type":"string"},"license_key":{"description":"License key","type":"string"}},"required":["account_id","license_key"],"type":"object"},"notification":{"description":"List of notification providers","items":{"anyOf":[{"additionalProperties":false,"properties":{"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"name":{"description":"Provider name","type":"string"},"provider":{"const":"gotify","description":"Provider type","type":"string"},"token":{"description":"Gotify token","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","token","url"],"type":"object"},{"additionalProperties":false,"properties":{"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"name":{"description":"Provider name","type":"string"},"provider":{"const":"ntfy","description":"Provider type","type":"string"},"token":{"default":null,"description":"Ntfy token","type":"string"},"topic":{"description":"Topic","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","topic","url"],"type":"object"},{"additionalProperties":false,"properties":{"color_mode":{"default":"hex","description":"Color mode","enum":["hex","dec"],"type":"string"},"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"method":{"default":"POST","description":"Request method","enum":["POST","GET","PUT"],"type":"string"},"mime_type":{"default":"application/json","description":"MIME type","enum":["application/json","application/x-www-form-urlencoded","text/plain","text/markdown"],"type":"string"},"name":{"description":"Provider name","type":"string"},"payload":{"description":"Message (usually JSON), required when template is not defined","title":"Webhook payload","type":"string"},"provider":{"const":"webhook","description":"Provider type","type":"string"},"template":{"default":"discord","description":"Template","enum":["","discord"],"type":"string"},"token":{"description":"Token","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","url"],"type":"object"}]},"minItems":1,"type":"array"},"proxmox":{"description":"List of proxmox providers","items":{"additionalProperties":false,"properties":{"no_tls_verify":{"description":"Skip TLS verification","type":"boolean"},"secret":{"description":"API secret","type":"string"},"token_id":{"description":"Token ID","type":"string"},"url":{"description":"URL","format":"uri","type":"string","examples":["https://proxmox.example.com:8006/api/json2"]}},"required":["url","token_id","secret"],"type":"object"},"minItems":1,"type":"array"}},"type":"object"},"timeout_shutdown":{"default":3,"description":"Optional timeout before shutdown","minimum":1,"type":"number"}},"required":["providers"],"type":"object"},"CountryISOMatcher":{"description":"Country ISO matcher","examples":["country:US"],"pattern":"country:\\w{2}","type":"string"},"CustomOptions":{"additionalProperties":false,"properties":{"ca_certs":{"description":"CA Certs","items":{"type":"string"},"type":"array"},"ca_dir_url":{"description":"CA Directory URL","type":"string"},"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"eab_hmac":{"description":"EAB HMAC base64","type":"string"},"eab_kid":{"description":"EAB Key ID","type":"string"},"email":{"description":"ACME email","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"provider":{"const":"custom","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","provider"],"type":"object"},"DomainName":{"description":"Domain name","pattern":"^(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"DomainOrWildcard":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"DuckDNSOptions":{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"token":{"type":"string"}},"required":["token"],"type":"object"},"provider":{"const":"duckdns","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},"Duration":{"description":"Duration","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"Email":{"description":"Email address","format":"email","type":"string"},"EntrypointConfig":{"additionalProperties":false,"properties":{"access_log":{"description":"Entrypoint access log configuration","additionalProperties":false,"properties":{"fields":{"description":"Access log fields","additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"filters":{"description":"Access log filters","additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"format":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"middlewares":{"description":"Entrypoint middleware configuration","items":{"anyOf":[{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"error_page","enum":["error_page","custom_error_page"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"redirect_http","const":"redirect_http","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"set_x_forwarded","const":"set_x_forwarded","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"hide_x_forwarded","const":"hide_x_forwarded","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"use":{"description":"cidr_whitelist","const":"cidr_whitelist","type":"string"}},"required":["allow","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"cloudflare_real_ip","const":"cloudflare_real_ip","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"use":{"description":"modify_request","enum":["modify_request","request"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"use":{"description":"modify_response","enum":["modify_response","response"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"oidc","const":"oidc","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use":{"description":"rate_limit","const":"rate_limit","type":"string"}},"required":["average","burst","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"},"use":{"description":"real_ip","const":"real_ip","type":"string"}},"required":["from","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"},"use":{"description":"modify_html","const":"modify_html","type":"string"}},"required":["html","target","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"},"use":{"description":"themed","const":"themed","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"},"use":{"description":"forward_auth","const":"forward_auth","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"type":"string"}},"required":["use"],"type":"object"}]},"type":"array"},"rules":{"additionalProperties":false,"description":"Entrypoint rules","properties":{"not_found":{"description":"Not found rules","items":{"anyOf":[{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":["string"]},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"description":"Rule name","type":"string"},"on":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]}},"required":["on","do"],"type":"object"},{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":["string"]},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"const":"default","description":"Default rule","type":"string"}},"required":["name","do"],"type":"object"}]},"type":"array"}},"type":"object"},"support_proxy_protocol":{"description":"Enable support for proxy protocol","type":"boolean"}},"type":"object"},"EntrypointMiddlewares":{"items":{"anyOf":[{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"error_page","enum":["error_page","custom_error_page"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"redirect_http","const":"redirect_http","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"set_x_forwarded","const":"set_x_forwarded","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"hide_x_forwarded","const":"hide_x_forwarded","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"use":{"description":"cidr_whitelist","const":"cidr_whitelist","type":"string"}},"required":["allow","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"cloudflare_real_ip","const":"cloudflare_real_ip","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"use":{"description":"modify_request","enum":["modify_request","request"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"use":{"description":"modify_response","enum":["modify_response","response"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"oidc","const":"oidc","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use":{"description":"rate_limit","const":"rate_limit","type":"string"}},"required":["average","burst","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"},"use":{"description":"real_ip","const":"real_ip","type":"string"}},"required":["from","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"},"use":{"description":"modify_html","const":"modify_html","type":"string"}},"required":["html","target","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"},"use":{"description":"themed","const":"themed","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"},"use":{"description":"forward_auth","const":"forward_auth","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"type":"string"}},"required":["use"],"type":"object"}]},"type":"array"},"GotifyConfig":{"additionalProperties":false,"properties":{"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"name":{"description":"Provider name","type":"string"},"provider":{"const":"gotify","description":"Provider type","type":"string"},"token":{"description":"Gotify token","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","token","url"],"type":"object"},"HTTPHeader":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"HTTPMethod":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"HomepageConfig":{"additionalProperties":false,"properties":{"use_default_categories":{"default":true,"description":"Use default app categories (uses docker image name)","type":"boolean"}},"required":["use_default_categories"],"type":"object"},"Hostname":{"description":"Hostname","format":"hostname","type":"string"},"IPMatcher":{"description":"IP matcher","examples":["ip:192.168.1.1"],"type":"string"},"LocalOptions":{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"anyOf":[{"type":"object"},{"type":"null"}]},"provider":{"const":"local","type":"string"}},"required":["provider"],"type":"object"},"LogField":{"additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"LogFieldMode":{"enum":["keep","drop","redact"],"type":"string"},"LogKeepDays":{"type":"string"},"LogKeepLast":{"type":"string"},"LogKeepSize":{"type":"string"},"LooseUse<\"cidr_whitelist\">":{"const":"cidr_whitelist","type":"string"},"LooseUse<\"cloudflare_real_ip\">":{"const":"cloudflare_real_ip","type":"string"},"LooseUse<\"forward_auth\">":{"const":"forward_auth","type":"string"},"LooseUse<\"hide_x_forwarded\">":{"const":"hide_x_forwarded","type":"string"},"LooseUse<\"modify_html\">":{"const":"modify_html","type":"string"},"LooseUse<\"oidc\">":{"const":"oidc","type":"string"},"LooseUse<\"rate_limit\">":{"const":"rate_limit","type":"string"},"LooseUse<\"real_ip\">":{"const":"real_ip","type":"string"},"LooseUse<\"redirect_http\">":{"const":"redirect_http","type":"string"},"LooseUse<\"set_x_forwarded\">":{"const":"set_x_forwarded","type":"string"},"LooseUse<\"themed\">":{"const":"themed","type":"string"},"LooseUse<(\"error_page\"|\"custom_error_page\")>":{"enum":["error_page","custom_error_page"],"type":"string"},"LooseUse<(\"modify_request\"|\"request\")>":{"enum":["modify_request","request"],"type":"string"},"LooseUse<(\"modify_response\"|\"response\")>":{"enum":["modify_response","response"],"type":"string"},"MaxmindConfig":{"additionalProperties":false,"properties":{"account_id":{"description":"Account ID","type":["string","number"]},"database":{"default":"geolite","description":"Database","enum":["geolite","geoip2"],"type":"string"},"license_key":{"description":"License key","type":"string"}},"required":["account_id","license_key"],"type":"object"},"MiddlewareComposeItem":{"anyOf":[{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"error_page","enum":["error_page","custom_error_page"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"redirect_http","const":"redirect_http","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"set_x_forwarded","const":"set_x_forwarded","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"hide_x_forwarded","const":"hide_x_forwarded","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"use":{"description":"cidr_whitelist","const":"cidr_whitelist","type":"string"}},"required":["allow","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"cloudflare_real_ip","const":"cloudflare_real_ip","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"use":{"description":"modify_request","enum":["modify_request","request"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"use":{"description":"modify_response","enum":["modify_response","response"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"oidc","const":"oidc","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use":{"description":"rate_limit","const":"rate_limit","type":"string"}},"required":["average","burst","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"},"use":{"description":"real_ip","const":"real_ip","type":"string"}},"required":["from","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"},"use":{"description":"modify_html","const":"modify_html","type":"string"}},"required":["html","target","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"},"use":{"description":"themed","const":"themed","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"},"use":{"description":"forward_auth","const":"forward_auth","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"type":"string"}},"required":["use"],"type":"object"}]},"MiddlewareFileRef":{"type":"string"},"NotificationConfig":{"anyOf":[{"additionalProperties":false,"properties":{"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"name":{"description":"Provider name","type":"string"},"provider":{"const":"gotify","description":"Provider type","type":"string"},"token":{"description":"Gotify token","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","token","url"],"type":"object"},{"additionalProperties":false,"properties":{"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"name":{"description":"Provider name","type":"string"},"provider":{"const":"ntfy","description":"Provider type","type":"string"},"token":{"default":null,"description":"Ntfy token","type":"string"},"topic":{"description":"Topic","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","topic","url"],"type":"object"},{"additionalProperties":false,"properties":{"color_mode":{"default":"hex","description":"Color mode","enum":["hex","dec"],"type":"string"},"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"method":{"default":"POST","description":"Request method","enum":["POST","GET","PUT"],"type":"string"},"mime_type":{"default":"application/json","description":"MIME type","enum":["application/json","application/x-www-form-urlencoded","text/plain","text/markdown"],"type":"string"},"name":{"description":"Provider name","type":"string"},"payload":{"description":"Message (usually JSON), required when template is not defined","title":"Webhook payload","type":"string"},"provider":{"const":"webhook","description":"Provider type","type":"string"},"template":{"default":"discord","description":"Template","enum":["","discord"],"type":"string"},"token":{"description":"Token","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","url"],"type":"object"}]},"NotificationFormat":{"enum":["markdown","plain"],"type":"string"},"NtfyConfig":{"additionalProperties":false,"properties":{"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"name":{"description":"Provider name","type":"string"},"provider":{"const":"ntfy","description":"Provider type","type":"string"},"token":{"default":null,"description":"Ntfy token","type":"string"},"topic":{"description":"Topic","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","topic","url"],"type":"object"},"OVHEndpoint":{"enum":["ovh-eu","ovh-ca","ovh-us","kimsufi-eu","kimsufi-ca","soyoustart-eu","soyoustart-ca"],"type":"string"},"OVHOptionsWithAppKey":{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"api_endpoint":{"enum":["ovh-eu","ovh-ca","ovh-us","kimsufi-eu","kimsufi-ca","soyoustart-eu","soyoustart-ca"],"type":"string"},"application_key":{"type":"string"},"application_secret":{"type":"string"},"consumer_key":{"type":"string"}},"required":["application_secret","consumer_key","application_key"],"type":"object"},"provider":{"const":"ovh","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},"OVHOptionsWithOAuth2Config":{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"api_endpoint":{"enum":["ovh-eu","ovh-ca","ovh-us","kimsufi-eu","kimsufi-ca","soyoustart-eu","soyoustart-ca"],"type":"string"},"application_secret":{"type":"string"},"consumer_key":{"type":"string"},"oauth2_config":{"additionalProperties":false,"properties":{"client_id":{"type":"string"},"client_secret":{"type":"string"}},"required":["client_id","client_secret"],"type":"object"}},"required":["application_secret","consumer_key","oauth2_config"],"type":"object"},"provider":{"const":"ovh","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},"OptionalPattern<string>":{"type":["string"]},"OtherOptions":{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"type":"object"},"provider":{"type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},"PorkbunOptions":{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"api_key":{"type":"string"},"secret_api_key":{"type":"string"}},"required":["api_key","secret_api_key"],"type":"object"},"provider":{"const":"porkbun","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},"Providers":{"additionalProperties":false,"properties":{"agents":{"description":"List of GoDoxy agents","items":{"type":"string"},"minItems":1,"type":"array"},"docker":{"additionalProperties":{"anyOf":[{"description":"URL","format":"uri","type":"string"},{"const":"$DOCKER_HOST","type":"string"}]},"description":"Name-value mapping of docker hosts to retrieve routes from","minProperties":1,"type":"object"},"include":{"description":"List of route definition files to include","items":{"description":"URI","format":"uri-reference","type":"string"},"minItems":1,"type":"array"},"maxmind":{"description":"Maxmind provider","additionalProperties":false,"properties":{"account_id":{"description":"Account ID","type":["string","number"]},"database":{"default":"geolite","description":"Database","enum":["geolite","geoip2"],"type":"string"},"license_key":{"description":"License key","type":"string"}},"required":["account_id","license_key"],"type":"object"},"notification":{"description":"List of notification providers","items":{"anyOf":[{"additionalProperties":false,"properties":{"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"name":{"description":"Provider name","type":"string"},"provider":{"const":"gotify","description":"Provider type","type":"string"},"token":{"description":"Gotify token","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","token","url"],"type":"object"},{"additionalProperties":false,"properties":{"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"name":{"description":"Provider name","type":"string"},"provider":{"const":"ntfy","description":"Provider type","type":"string"},"token":{"default":null,"description":"Ntfy token","type":"string"},"topic":{"description":"Topic","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","topic","url"],"type":"object"},{"additionalProperties":false,"properties":{"color_mode":{"default":"hex","description":"Color mode","enum":["hex","dec"],"type":"string"},"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"method":{"default":"POST","description":"Request method","enum":["POST","GET","PUT"],"type":"string"},"mime_type":{"default":"application/json","description":"MIME type","enum":["application/json","application/x-www-form-urlencoded","text/plain","text/markdown"],"type":"string"},"name":{"description":"Provider name","type":"string"},"payload":{"description":"Message (usually JSON), required when template is not defined","title":"Webhook payload","type":"string"},"provider":{"const":"webhook","description":"Provider type","type":"string"},"template":{"default":"discord","description":"Template","enum":["","discord"],"type":"string"},"token":{"description":"Token","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","url"],"type":"object"}]},"minItems":1,"type":"array"},"proxmox":{"description":"List of proxmox providers","items":{"additionalProperties":false,"properties":{"no_tls_verify":{"description":"Skip TLS verification","type":"boolean"},"secret":{"description":"API secret","type":"string"},"token_id":{"description":"Token ID","type":"string"},"url":{"description":"URL","format":"uri","type":"string","examples":["https://proxmox.example.com:8006/api/json2"]}},"required":["url","token_id","secret"],"type":"object"},"minItems":1,"type":"array"}},"type":"object"},"ProxmoxConfig":{"additionalProperties":false,"properties":{"no_tls_verify":{"description":"Skip TLS verification","type":"boolean"},"secret":{"description":"API secret","type":"string"},"token_id":{"description":"Token ID","type":"string"},"url":{"description":"URL","format":"uri","type":"string","examples":["https://proxmox.example.com:8006/api/json2"]}},"required":["url","token_id","secret"],"type":"object"},"Record<HTTPHeader,string>":{"additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"Record<string,LogFieldMode>":{"additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"RequestAccessLogFilter<CIDR>":{"additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"RequestAccessLogFilter<HTTPHeader>":{"additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"RequestAccessLogFilter<HTTPMethod>":{"additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"RequestAccessLogFilter<Hostname>":{"additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"RequestAccessLogFilter<StatusCodeRange>":{"additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"},"RequestLogConfig":{"additionalProperties":false,"properties":{"fields":{"description":"Access log fields","additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"filters":{"description":"Access log filters","additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"format":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"RequestLogFields":{"additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"RequestLogFilters":{"additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"RequestLogFormat":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"RetentionPolicy":{"anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}],"default":"30 days","description":"Retention policy"},"RouteRule":{"anyOf":[{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":["string"]},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"description":"Rule name","type":"string"},"on":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]}},"required":["on","do"],"type":"object"},{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":["string"]},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"const":"default","description":"Default rule","type":"string"}},"required":["name","do"],"type":"object"}]},"RuleDo":{"anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":["string"]},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"description":"Rule do","examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"RuleDoAdd":{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},"RuleDoError":{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},"RuleDoLog":{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},"RuleDoNotify":{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},"RuleDoPass":{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"},"RuleDoProxy":{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080"],"type":"string"},"RuleDoRedirect":{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":["string"]},"RuleDoRemove":{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},"RuleDoRequireBasicAuth":{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},"RuleDoRewrite":{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},"RuleDoServe":{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},"RuleDoSet":{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},"RuleOn":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"RuleOnBasicAuth":{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},"RuleOnCookie":{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},"RuleOnForm":{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},"RuleOnHeader":{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},"RuleOnHost":{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},"RuleOnMethod":{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},"RuleOnPath":{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},"RuleOnPostForm":{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},"RuleOnQuery":{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},"RuleOnRemote":{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},"RuleOnResponseHeader":{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]},"RuleOnRoute":{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},"RuleOnStatusCode":{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},"StatusCode":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},"StatusCodeRange":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"TimezoneMatcher":{"description":"Timezone matcher","examples":["tz:America/New_York"],"pattern":"tz:\\w+\\/\\w+","type":"string"},"URI":{"description":"URI","format":"uri-reference","type":"string"},"URL":{"description":"URL","format":"uri","type":"string"},"WebhookColorMode":{"enum":["hex","dec"],"type":"string"},"WebhookConfig":{"additionalProperties":false,"properties":{"color_mode":{"default":"hex","description":"Color mode","enum":["hex","dec"],"type":"string"},"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"method":{"default":"POST","description":"Request method","enum":["POST","GET","PUT"],"type":"string"},"mime_type":{"default":"application/json","description":"MIME type","enum":["application/json","application/x-www-form-urlencoded","text/plain","text/markdown"],"type":"string"},"name":{"description":"Provider name","type":"string"},"payload":{"description":"Message (usually JSON), required when template is not defined","title":"Webhook payload","type":"string"},"provider":{"const":"webhook","description":"Provider type","type":"string"},"template":{"default":"discord","description":"Template","enum":["","discord"],"type":"string"},"token":{"description":"Token","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","url"],"type":"object"},"WebhookMethod":{"enum":["POST","GET","PUT"],"type":"string"},"WebhookMimeType":{"enum":["application/json","application/x-www-form-urlencoded","text/plain","text/markdown"],"type":"string"},"WebhookTemplate":{"enum":["","discord"],"type":"string"}},"additionalProperties":false,"properties":{"acl":{"description":"Optional access control configuration","additionalProperties":false,"properties":{"allow":{"description":"Allow list","items":{"anyOf":[{"description":"IP matcher","examples":["ip:192.168.1.1"],"type":"string"},{"description":"CIDR matcher","examples":["cidr:192.168.1.0/24"],"type":"string"},{"description":"Country ISO matcher","examples":["country:US"],"pattern":"country:\\w{2}","type":"string"},{"description":"Timezone matcher","examples":["tz:America/New_York"],"pattern":"tz:\\w+\\/\\w+","type":"string"}]},"type":"array"},"allow_local":{"default":true,"description":"Allow local addresses","type":"boolean"},"default":{"default":"allow","description":"Default action","enum":["allow","deny"],"type":"string"},"deny":{"description":"Deny list","items":{"anyOf":[{"description":"IP matcher","examples":["ip:192.168.1.1"],"type":"string"},{"description":"CIDR matcher","examples":["cidr:192.168.1.0/24"],"type":"string"},{"description":"Country ISO matcher","examples":["country:US"],"pattern":"country:\\w{2}","type":"string"},{"description":"Timezone matcher","examples":["tz:America/New_York"],"pattern":"tz:\\w+\\/\\w+","type":"string"}]},"type":"array"},"log":{"description":"ACL logger","additionalProperties":false,"properties":{"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"log_allowed":{"default":false,"description":"Log allowed IPs?","type":"boolean"},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"notify":{"additionalProperties":false,"description":"ACL Summary notifer","properties":{"include_allowed":{"default":false,"description":"Include allowed IPs?","type":"boolean"},"interval":{"default":"1m","description":"Notification interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"to":{"description":"Notification provider names","items":{"type":"string"},"type":"array"}},"type":"object"}},"type":"object"},"autocert":{"description":"Optional autocert configuration","anyOf":[{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"anyOf":[{"type":"object"},{"type":"null"}]},"provider":{"const":"local","type":"string"}},"required":["provider"],"type":"object"},{"additionalProperties":false,"properties":{"ca_certs":{"description":"CA Certs","items":{"type":"string"},"type":"array"},"ca_dir_url":{"description":"CA Directory URL","type":"string"},"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"eab_hmac":{"description":"EAB HMAC base64","type":"string"},"eab_kid":{"description":"EAB Key ID","type":"string"},"email":{"description":"ACME email","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"provider":{"const":"custom","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"ACME email","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"auth_token":{"type":"string"}},"required":["auth_token"],"type":"object"},"provider":{"const":"cloudflare","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"ACME email","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"client_id":{"type":"string"},"email":{"description":"Email address","format":"email","type":"string"},"password":{"type":"string"}},"required":["client_id","email","password"],"type":"object"},"provider":{"const":"clouddns","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"token":{"type":"string"}},"required":["token"],"type":"object"},"provider":{"const":"duckdns","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"api_endpoint":{"enum":["ovh-eu","ovh-ca","ovh-us","kimsufi-eu","kimsufi-ca","soyoustart-eu","soyoustart-ca"],"type":"string"},"application_key":{"type":"string"},"application_secret":{"type":"string"},"consumer_key":{"type":"string"}},"required":["application_secret","consumer_key","application_key"],"type":"object"},"provider":{"const":"ovh","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"api_endpoint":{"enum":["ovh-eu","ovh-ca","ovh-us","kimsufi-eu","kimsufi-ca","soyoustart-eu","soyoustart-ca"],"type":"string"},"application_secret":{"type":"string"},"consumer_key":{"type":"string"},"oauth2_config":{"additionalProperties":false,"properties":{"client_id":{"type":"string"},"client_secret":{"type":"string"}},"required":["client_id","client_secret"],"type":"object"}},"required":["application_secret","consumer_key","oauth2_config"],"type":"object"},"provider":{"const":"ovh","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"additionalProperties":false,"properties":{"api_key":{"type":"string"},"secret_api_key":{"type":"string"}},"required":["api_key","secret_api_key"],"type":"object"},"provider":{"const":"porkbun","type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"},{"additionalProperties":false,"properties":{"cert_path":{"description":"ACME certificate path","type":"string"},"domains":{"description":"ACME domains","items":{"description":"Domain or wildcard domain","pattern":"^(\\*\\.)?(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"type":"array"},"email":{"description":"Email address","format":"email","type":"string"},"key_path":{"description":"ACME key path","type":"string"},"options":{"type":"object"},"provider":{"type":"string"},"resolvers":{"description":"DNS resolvers","items":{"type":"string"},"type":"array"}},"required":["domains","email","options","provider"],"type":"object"}]},"entrypoint":{"description":"Optional entrypoint configuration","additionalProperties":false,"properties":{"access_log":{"description":"Entrypoint access log configuration","additionalProperties":false,"properties":{"fields":{"description":"Access log fields","additionalProperties":false,"properties":{"cookies":{"description":"Cookies","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"headers":{"description":"Headers","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"},"query":{"description":"Query","additionalProperties":false,"properties":{"config":{"description":"Field configuration","additionalProperties":{"enum":["keep","drop","redact"],"type":"string"},"type":"object"},"default":{"enum":["keep","drop","redact"],"type":"string","description":"Default mode"}},"required":["config"],"type":"object"}},"type":"object"},"filters":{"description":"Access log filters","additionalProperties":false,"properties":{"cidr":{"description":"CIDR filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"type":["string"]},"type":"array"}},"required":["values"],"type":"object"},"headers":{"description":"Header filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"host":{"description":"Host filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"Hostname","format":"hostname","type":"string"},"type":"array"}},"required":["values"],"type":"object"},"method":{"description":"Method filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"description":"HTTP Method","enum":["GET","POST","PUT","PATCH","DELETE","CONNECT","HEAD","OPTIONS","TRACE"],"type":"string"},"type":"array"}},"required":["values"],"type":"object"},"status_code":{"description":"Status code filter","additionalProperties":false,"properties":{"negative":{"default":false,"description":"Negative filter?","type":"boolean"},"values":{"description":"Filter values","items":{"anyOf":[{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"]},{"type":"string"}],"description":"Status code range","maximum":599,"minimum":100},"type":"array"}},"required":["values"],"type":"object"}},"type":"object"},"format":{"default":"combined","description":"Access log format","enum":["combined","common","json"],"type":"string"},"keep":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"path":{"description":"Access log file path","format":"uri-reference","type":"string"},"retention":{"default":"30 days","description":"Retention policy","anyOf":[{"type":"string"},{"type":"string"},{"type":"string"}]},"rotate_interval":{"default":"24h","description":"Rotation interval","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"stdout":{"default":false,"description":"Log to stdout","type":"boolean"}},"type":"object"},"middlewares":{"description":"Entrypoint middleware configuration","items":{"anyOf":[{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"error_page","enum":["error_page","custom_error_page"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"redirect_http","const":"redirect_http","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"set_x_forwarded","const":"set_x_forwarded","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"hide_x_forwarded","const":"hide_x_forwarded","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"allow":{"items":{"type":["string"]},"type":"array"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"message":{"default":"IP not allowed","description":"Block message","type":"string"},"status":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"status_code":{"description":"Status code","maximum":599,"minimum":100,"type":["number","string"],"default":403},"use":{"description":"cidr_whitelist","const":"cidr_whitelist","type":"string"}},"required":["allow","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"cloudflare_real_ip","const":"cloudflare_real_ip","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"add_prefix":{"description":"Add prefix to request URL","type":"string"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"use":{"description":"modify_request","enum":["modify_request","request"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"add_headers":{"description":"Add HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"hide_headers":{"description":"Hide HTTP headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"set_headers":{"description":"Set HTTP headers","additionalProperties":{"type":"string"},"propertyNames":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$"},"type":"object"},"use":{"description":"modify_response","enum":["modify_response","response"],"type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"allowed_groups":{"description":"Allowed groups","items":{"type":"string"},"minItems":1,"type":"array"},"allowed_users":{"description":"Allowed users","items":{"type":"string"},"minItems":1,"type":"array"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"description":"oidc","const":"oidc","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"average":{"description":"Average number of requests allowed in a period","type":"number"},"burst":{"description":"Maximum number of requests allowed in a period","type":"number"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"period":{"default":"1s","description":"Duration of the rate limit","pattern":"^\\d+(?:us|ms|s|m|h|d|w|M)$","type":"string"},"use":{"description":"rate_limit","const":"rate_limit","type":"string"}},"required":["average","burst","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"from":{"items":{"type":["string"]},"type":"array"},"header":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string","default":"X-Real-IP"},"recursive":{"default":false,"description":"Recursive resolve the IP","type":"boolean"},"use":{"description":"real_ip","const":"real_ip","type":"string"}},"required":["from","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"html":{"description":"HTML to modify","type":"string"},"replace":{"default":false,"description":"Replace HTML","type":"boolean"},"target":{"description":"CSS Selector","type":"string"},"use":{"description":"modify_html","const":"modify_html","type":"string"}},"required":["html","target","use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"css":{"description":"Custom CSS","type":"string"},"font_family":{"description":"Font family","type":"string"},"font_url":{"description":"Font URL","type":"string"},"theme":{"description":"Predefined themes","enum":["dark","dark-grey","solarized-dark"],"type":"string"},"use":{"description":"themed","const":"themed","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"auth_endpoint":{"default":"/api/auth/traefik","description":"Auth endpoint","type":"string"},"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"headers":{"default":["Remote-User","Remote-Name","Remote-Email","Remote-Groups"],"description":"Additional response headers","items":{"description":"HTTP Header","pattern":"^[a-zA-Z0-9\\-]+$","type":"string"},"type":"array"},"route":{"default":"tinyauth","description":"Auth route name","type":"string"},"use":{"description":"forward_auth","const":"forward_auth","type":"string"}},"required":["use"],"type":"object"},{"additionalProperties":false,"properties":{"bypass":{"description":"Bypass rules","items":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"type":"array"},"use":{"type":"string"}},"required":["use"],"type":"object"}]},"type":"array"},"rules":{"additionalProperties":false,"description":"Entrypoint rules","properties":{"not_found":{"description":"Not found rules","items":{"anyOf":[{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":["string"]},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"description":"Rule name","type":"string"},"on":{"anyOf":[{"description":"header {key} [{value}]\n\nWhen value is provided, match the request header with the given key and value pattern. Otherwise, match the request header when the given key exists.","examples":["header Content-Type","header Content-Type application/json"],"type":["string"]},{"description":"query {key} [{value}]\n\nWhen value is provided, match the request query with the given key and value pattern. Otherwise, match the request query when the given key exists.","examples":["query key","query key value"],"type":["string"]},{"description":"cookie {key} [{value}]\n\nWhen value is provided, match the request cookie with the given key and value pattern. Otherwise, match the request cookie when the given key exists.","examples":["cookie key","cookie key value"],"type":["string"]},{"description":"form {key} [{value}]\n\nWhen value is provided, match the request form with the given key and value pattern. Otherwise, match the request form when the given key exists.","examples":["form key value"],"type":["string"]},{"description":"post_form {key} [{value}]\n\nWhen value is provided, match the request post form with the given key and value pattern. Otherwise, match the request post form when the given key exists.","examples":["post_form key value"],"type":["string"]},{"description":"host {host}\n\nMatch the request host with the given host pattern.","examples":["host example.com"],"type":"string"},{"description":"method {http_method}\n\nMatch the request method with the given method.","enum":["method GET","method POST","method PUT","method PATCH","method DELETE","method CONNECT","method HEAD","method OPTIONS","method TRACE"],"examples":["method GET"],"type":"string"},{"description":"path {glob_pattern}\n\nMatch the request path with the given path pattern.","examples":["path glob(/api/*)","path regex(/api/[^/]+)","path /exact"],"type":"string"},{"description":"remote {ip|cidr}\n\nMatch the request remote address with the given IP or CIDR.","examples":["remote 127.0.0.1"],"type":"string"},{"description":"route {alias}\n\nMatch the request route with the given alias pattern.","examples":["route immich","route regex(w+)"],"type":"string"},{"description":"basic_auth {username} {bcrypt_hashed_password}\n\nMatch the request basic authentication with the given username and bcrypt hashed password.","examples":["basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm"],"type":"string"},{"description":"status {status_code} status {status_code}-{status_code} status {1|2|3|4|5}xx\n\nMatch the request status code with the given status code.","examples":["status 404","status 200-300","status 2xx"],"type":"string"},{"description":"resp_header {key} [{value}]\n\nWhen value is provided, match the response header with the given key and value pattern. Otherwise, match the response header when the given key exists.","examples":["resp_header Content-Type","resp_header Content-Type application/json"],"type":["string"]}],"description":"Rule on","examples":["header Content-Type application/json","query key value","cookie key value","form key value","post_form key value","method GET","path glob(/api/*)","remote 127.0.0.1","route immich","basic_auth admin $2y$05$N3ZiFNDXVSMZ/OtcuSzGrOEBp15dqw6kQ9OJWvJSlgi9/zJ9LuCrm","rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]}},"required":["on","do"],"type":"object"},{"additionalProperties":false,"properties":{"do":{"description":"Rule do","anyOf":[{"description":"rewrite {path_from} {path_to}\n\nRewrite the request path to the given path.","examples":["rewrite / /index.html"],"type":"string"},{"description":"serve {path_to}\n\nServe the request from the given path.","examples":["serve /static"],"type":"string"},{"description":"proxy {url}\n\nProxy the request to the given URL.","examples":["proxy http://localhost:8080"],"type":"string"},{"description":"redirect {url|path}\n\nRedirect the request to the given URL or path.","examples":["redirect https://example.com","redirect /index.html"],"type":["string"]},{"description":"error {status_code} {message}\n\nReturn the given status code and message.","examples":["error 404 \"Not Found\""],"type":"string"},{"description":"require_basic_auth {realm}\n\nRequire basic authentication with the given realm.","examples":["require_basic_auth \"Restricted Area\""],"type":"string"},{"description":"set {field} {key} {value}\n\nSet the given field to the given value.","examples":["set headers Content-Type application/json"],"type":"string"},{"description":"add {field} {key} {value}\n\nAdd the given value to the given field.","examples":["add headers Content-Type application/json"],"type":"string"},{"description":"remove {field} {key}\n\nRemove the given key from the given field.","examples":["remove headers Content-Type"],"type":"string"},{"description":"log {level} {path} {template}\n\nLog the given level, path and template. For stdout and stderr, use /dev/stdout and /dev/stderr respectively.","examples":["log info /dev/stdout \"{{ .Request.Method }} {{ .Request.URL }} {{ .Response.StatusCode }}\""],"type":"string"},{"description":"notify {level} {service_name} {template}\n\nNotify the given level, service name and template. Service must be in `providers.notification`","examples":["notify info ntfy \"Received request to {{ .Request.URL }}\" \"{{ .Request.Method }} {{ .Response.StatusCode }}\""],"type":"string"},{"const":"pass","description":"pass\n\nSkip and continue to the next handler (e.g. upstream server)","type":"string"}],"examples":["rewrite / /index.html","serve /static","proxy http://localhost:8080","redirect https://example.com","redirect /index.html","error 404 \"Not Found\"","require_basic_auth \"Restricted Area\"","set headers Content-Type application/json","add headers Content-Type application/json","remove headers Content-Type","pass"]},"name":{"const":"default","description":"Default rule","type":"string"}},"required":["name","do"],"type":"object"}]},"type":"array"}},"type":"object"},"support_proxy_protocol":{"description":"Enable support for proxy protocol","type":"boolean"}},"type":"object"},"homepage":{"description":"Homepage configuration","additionalProperties":false,"properties":{"use_default_categories":{"default":true,"description":"Use default app categories (uses docker image name)","type":"boolean"}},"required":["use_default_categories"],"type":"object"},"match_domains":{"default":[],"description":"List of domains to match","items":{"description":"Domain name","pattern":"^(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$","type":"string"},"minItems":1,"type":"array"},"providers":{"description":"Providers configuration (include file, docker, notification)","additionalProperties":false,"properties":{"agents":{"description":"List of GoDoxy agents","items":{"type":"string"},"minItems":1,"type":"array"},"docker":{"additionalProperties":{"anyOf":[{"description":"URL","format":"uri","type":"string"},{"const":"$DOCKER_HOST","type":"string"}]},"description":"Name-value mapping of docker hosts to retrieve routes from","minProperties":1,"type":"object"},"include":{"description":"List of route definition files to include","items":{"description":"URI","format":"uri-reference","type":"string"},"minItems":1,"type":"array"},"maxmind":{"description":"Maxmind provider","additionalProperties":false,"properties":{"account_id":{"description":"Account ID","type":["string","number"]},"database":{"default":"geolite","description":"Database","enum":["geolite","geoip2"],"type":"string"},"license_key":{"description":"License key","type":"string"}},"required":["account_id","license_key"],"type":"object"},"notification":{"description":"List of notification providers","items":{"anyOf":[{"additionalProperties":false,"properties":{"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"name":{"description":"Provider name","type":"string"},"provider":{"const":"gotify","description":"Provider type","type":"string"},"token":{"description":"Gotify token","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","token","url"],"type":"object"},{"additionalProperties":false,"properties":{"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"name":{"description":"Provider name","type":"string"},"provider":{"const":"ntfy","description":"Provider type","type":"string"},"token":{"default":null,"description":"Ntfy token","type":"string"},"topic":{"description":"Topic","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","topic","url"],"type":"object"},{"additionalProperties":false,"properties":{"color_mode":{"default":"hex","description":"Color mode","enum":["hex","dec"],"type":"string"},"format":{"default":"markdown","description":"Message format","enum":["markdown","plain"],"type":"string"},"method":{"default":"POST","description":"Request method","enum":["POST","GET","PUT"],"type":"string"},"mime_type":{"default":"application/json","description":"MIME type","enum":["application/json","application/x-www-form-urlencoded","text/plain","text/markdown"],"type":"string"},"name":{"description":"Provider name","type":"string"},"payload":{"description":"Message (usually JSON), required when template is not defined","title":"Webhook payload","type":"string"},"provider":{"const":"webhook","description":"Provider type","type":"string"},"template":{"default":"discord","description":"Template","enum":["","discord"],"type":"string"},"token":{"description":"Token","type":"string"},"url":{"description":"URL","format":"uri","type":"string"}},"required":["name","provider","url"],"type":"object"}]},"minItems":1,"type":"array"},"proxmox":{"description":"List of proxmox providers","items":{"additionalProperties":false,"properties":{"no_tls_verify":{"description":"Skip TLS verification","type":"boolean"},"secret":{"description":"API secret","type":"string"},"token_id":{"description":"Token ID","type":"string"},"url":{"description":"URL","format":"uri","type":"string","examples":["https://proxmox.example.com:8006/api/json2"]}},"required":["url","token_id","secret"],"type":"object"},"minItems":1,"type":"array"}},"type":"object"},"timeout_shutdown":{"default":3,"description":"Optional timeout before shutdown","minimum":1,"type":"number"}},"required":["providers"],"type":"object"}
